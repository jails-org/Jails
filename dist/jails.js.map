{"version":3,"file":"jails.js","sources":["../src/index.ts"],"sourcesContent":["import { Element } from './element'\nimport { Idiomorph } from 'idiomorph/dist/idiomorph.esm'\n\nconst textarea = document.createElement('textarea')\nconst components = {}\nconst templates = {}\n\nexport const register = ( name, module, dependencies ) => {\n\tcomponents[ name ] = { name, module, dependencies }\n}\n\nexport const start = ( target = document.body ) => {\n\tscan( target )\n}\n\nconst scan = ( target ) => {\n\n}\n\nconst decodeHTML = ( text ) => {\n\ttextarea.innerHTML = text\n\treturn textarea.value\n}\n\nconst directives = {\n\n\thtmlIf( node ) {\n\t\tconst expression = node.getAttribute('html-if')\n\t\tif( expression ) {\n\t\t\tnode.removeAttribute('html-if')\n\t\t\twrap(\n\t\t\t\tdocument.createTextNode(`{{ if(${expression}) { }}`),\n\t\t\t\tnode,\n\t\t\t\tdocument.createTextNode(`{{ } }}`)\n\t\t\t)\n\t\t}\n\t},\n\n\thtmlInner( node ) {\n\t\tconst expression = node.getAttribute('html-inner')\n\t\tif( expression ) {\n\t\t\tnode.removeAttribute('html-inner')\n\t\t\tnode.innerHTML = `{{= ${expression} }}`\n\t\t}\n\t}\n}\n\nconst wrap = (open, node, close) => {\n\tnode.parentNode?.insertBefore(open, node)\n\tnode.parentNode?.insertBefore(close, node.nextSibling)\n}\n"],"names":["document","createElement","name","module","dependencies","target","body"],"mappings":"6OAGiBA,SAASC,cAAc,uBAIhB,CAAEC,EAAMC,EAAQC,KAAhB,UAIH,CAAEC,EAASL,SAASM,QAApB"}