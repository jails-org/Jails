{"version":3,"file":"index.js","sources":["../src/transpile.ts","../src/utils/index.ts","../src/template-system.ts","../node_modules/morphdom/dist/morphdom-esm.js","../src/utils/events.ts","../src/utils/pubsub.ts","../src/component.ts","../src/element.ts","../src/index.ts"],"sourcesContent":["const parser = new DOMParser()\n\nexport default function Transpile(html, config, $scopes) {\n\n\tconst regexTags = new RegExp(`\\\\${config.tags[0]}(.+?)\\\\${config.tags[1]}`, 'g')\n\tconst virtual = parser.parseFromString(html.replace(/<\\/?template[^>]*>/g, ''), 'text/html')\n\n\tvirtual.querySelectorAll('[html-for], [html-if], [html-inner], [html-class]').forEach((element) => {\n\n\t\tconst htmlForeach = element.getAttribute('html-foreach')\n\t\tconst htmlFor \t= element.getAttribute('html-for')\n\t\tconst htmlIf \t= element.getAttribute('html-if')\n\t\tconst htmlInner = element.getAttribute('html-inner')\n\t\tconst htmlClass = element.getAttribute('html-class')\n\t\tconst forEachInstruction = htmlFor || htmlForeach\n\n\t\tif ( forEachInstruction ) {\n\t\t\tconst selector = htmlFor? 'html-for': 'html-foreach'\n\t\t\tconst split = forEachInstruction.match(/(.*)\\sin\\s(.*)/) || ''\n\t\t\tconst varname = split[1]\n\t\t\tconst object = split[2]\n\n\t\t\telement.removeAttribute(selector)\n\n\t\t\tconst ids = Array.from(element.querySelectorAll(`[tplid]:not([${selector}] [tplid])`)).map((cp) => {\n\t\t\t\tconst tplid = cp.getAttribute('tplid')\n\t\t\t\t$scopes[tplid] = []\n\t\t\t\treturn tplid\n\t\t\t})\n\n\t\t\tconst open = document.createTextNode(`%%_(function(){ var $index = 0; for(var $key in safe(function(){ return ${object} }) ){ var ${varname} = ${object}[$key]; ${JSON.stringify(ids).replace(/\\\"/g, \"'\")}.map(function(id){ if($scopes[id]) { $scopes[id][$index] = { ${varname}: ${object}[$key], $index: $index, $key: $key } } }); _%%`)\n\t\t\tconst close = document.createTextNode(`%%_ $index++}})() _%%`)\n\t\t\twrap(open, element, close)\n\t\t}\n\t\tif (htmlIf) {\n\t\t\telement.removeAttribute('html-if')\n\t\t\tconst open = document.createTextNode(`%%_ if ( safe(function(){ return ${htmlIf} }) ){ _%%`)\n\t\t\tconst close = document.createTextNode(`%%_ } _%%`)\n\t\t\twrap(open, element, close)\n\t\t}\n\t\tif (htmlInner) {\n\t\t\telement.removeAttribute('html-inner')\n\t\t\telement.innerHTML = `%%_=${htmlInner}_%%`\n\t\t}\n\t\tif (htmlClass) {\n\t\t\telement.removeAttribute('html-class')\n\t\t\telement.className = (element.className + ` %%_=${htmlClass}_%%`).trim()\n\t\t}\n\t})\n\n\treturn (\n\t\tvirtual.body.innerHTML\n\t\t\t.replace(regexTags, '%%_=$1_%%')\n\t\t\t// Booleans\n\t\t\t// https://meiert.com/en/blog/boolean-attributes-of-html/\n\t\t\t.replace(/html-(allowfullscreen|async|autofocus|autoplay|checked|controls|default|defer|disabled|formnovalidate|inert|ismap|itemscope|loop|multiple|muted|nomodule|novalidate|open|playsinline|readonly|required|reversed|selected)=\\\"(.*?)\\\"/g, `%%_if(safe(function(){ return $2 })){_%%$1%%_}_%%`)\n\t\t\t// The rest\n\t\t\t.replace(/html-(.*?)=\\\"(.*?)\\\"/g, (all, key, value) => {\n\t\t\t\tif (key === 'key' || key === 'model' || key == 'scope') {\n\t\t\t\t\treturn all\n\t\t\t\t}\n\t\t\t\tif (value) {\n\t\t\t\t\tvalue = value.replace(/^{|}$/g, '')\n\t\t\t\t\treturn `${key}=\"%%_=safe(function(){ return ${value} })_%%\"`\n\t\t\t\t} else {\n\t\t\t\t\treturn all\n\t\t\t\t}\n\t\t\t})\n\t)\n}\n\nconst wrap = (open, node, close) => {\n\tnode.parentNode?.insertBefore(open, node)\n\tnode.parentNode?.insertBefore(close, node.nextSibling)\n}\n","export const rAF = (fn) => {\n\tif (requestAnimationFrame)\n\t\treturn requestAnimationFrame(fn)\n\telse\n\t\treturn setTimeout(fn, 1000 / 60)\n}\n\nexport const uuid = () => {\n\treturn 'xxxxxxxx'.replace(/[xy]/g, (c) => {\n\t\tconst r = Math.random() * 8 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8)\n\t\treturn v.toString(8)\n\t})\n}\n\n\nexport const dup = (o) => {\n\treturn JSON.parse(JSON.stringify(o))\n}\n\n// http://crockford.com/javascript/memory/leak.html\nexport const purge = (d) => {\n\tvar a = d.attributes, i, l, n\n\tif (a) {\n\t\tfor (i = a.length - 1; i >= 0; i -= 1) {\n\t\t\tn = a[i].name\n\t\t\tif (typeof d[n] === 'function') {\n\t\t\t\td[n] = null\n\t\t\t}\n\t\t}\n\t}\n\ta = d.childNodes\n\tif (a) {\n\t\tl = a.length\n\t\tfor (i = 0; i < l; i += 1) {\n\t\t\tpurge(d.childNodes[i])\n\t\t}\n\t}\n}\n\nexport const safe = (execute, val) => {\n\ttry{return execute()}catch(err){return val || ''}\n}\n","import Transpile from './Transpile'\nimport { uuid } from './utils'\n\nconst textarea = document.createElement('textarea')\n\nconst config = {\n\ttags: ['${', '}']\n}\n\nexport const templateConfig = (newconfig) => {\n\tObject.assign(config, newconfig)\n}\n\nexport default function Template(element, $scopes) {\n\n\tconst html = Transpile(element.outerHTML, config, $scopes)\n\ttextarea.innerHTML = html\n\tconst decodedHTML  = JSON.stringify(textarea.value)\n\n\treturn new Function('$element', 'safe', '$scopes',`\n\t\tvar $data = this;\n\t\twith( $data ){\n\t\t\tvar output=${decodedHTML\n\t\t\t\t.replace(/%%_=(.+?)_%%/g, '\"+safe(function(){return $1;})+\"')\n\t\t\t\t.replace(/%%_(.+?)_%%/g, '\";$1\\noutput+=\"')};return output;\n\t\t}\n\t`)\n}\n\nexport const buildtemplates = ( target, components, templates, $scopes ) => {\n\treturn Array\n\t\t.from(target.querySelectorAll('*'))\n\t\t.filter((node) => node.tagName.toLowerCase() in components)\n\t\t.reverse()\n\t\t.map((node) => {\n\t\t\tArray.from(node.querySelectorAll('template'))\n\t\t\t\t.map((template) => buildtemplates(template.content, components, templates, $scopes))\n\t\t\tcreateTemplateId(node, templates, $scopes)\n\t\t\treturn node\n\t\t})\n}\n\nconst createTemplateId = (element, templates, $scopes ) => {\n\tconst tplid = element.getAttribute('tplid')\n\tif (!tplid) {\n\t\tconst id = uuid()\n\t\telement.setAttribute('tplid', id)\n\t\ttemplates[id] = Template(element, $scopes)\n\t}\n}\n\n","var DOCUMENT_FRAGMENT_NODE = 11;\n\nfunction morphAttrs(fromNode, toNode) {\n    var toNodeAttrs = toNode.attributes;\n    var attr;\n    var attrName;\n    var attrNamespaceURI;\n    var attrValue;\n    var fromValue;\n\n    // document-fragments dont have attributes so lets not do anything\n    if (toNode.nodeType === DOCUMENT_FRAGMENT_NODE || fromNode.nodeType === DOCUMENT_FRAGMENT_NODE) {\n      return;\n    }\n\n    // update attributes on original DOM element\n    for (var i = toNodeAttrs.length - 1; i >= 0; i--) {\n        attr = toNodeAttrs[i];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n        attrValue = attr.value;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n            fromValue = fromNode.getAttributeNS(attrNamespaceURI, attrName);\n\n            if (fromValue !== attrValue) {\n                if (attr.prefix === 'xmlns'){\n                    attrName = attr.name; // It's not allowed to set an attribute with the XMLNS namespace without specifying the `xmlns` prefix\n                }\n                fromNode.setAttributeNS(attrNamespaceURI, attrName, attrValue);\n            }\n        } else {\n            fromValue = fromNode.getAttribute(attrName);\n\n            if (fromValue !== attrValue) {\n                fromNode.setAttribute(attrName, attrValue);\n            }\n        }\n    }\n\n    // Remove any extra attributes found on the original DOM element that\n    // weren't found on the target element.\n    var fromNodeAttrs = fromNode.attributes;\n\n    for (var d = fromNodeAttrs.length - 1; d >= 0; d--) {\n        attr = fromNodeAttrs[d];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n\n            if (!toNode.hasAttributeNS(attrNamespaceURI, attrName)) {\n                fromNode.removeAttributeNS(attrNamespaceURI, attrName);\n            }\n        } else {\n            if (!toNode.hasAttribute(attrName)) {\n                fromNode.removeAttribute(attrName);\n            }\n        }\n    }\n}\n\nvar range; // Create a range object for efficently rendering strings to elements.\nvar NS_XHTML = 'http://www.w3.org/1999/xhtml';\n\nvar doc = typeof document === 'undefined' ? undefined : document;\nvar HAS_TEMPLATE_SUPPORT = !!doc && 'content' in doc.createElement('template');\nvar HAS_RANGE_SUPPORT = !!doc && doc.createRange && 'createContextualFragment' in doc.createRange();\n\nfunction createFragmentFromTemplate(str) {\n    var template = doc.createElement('template');\n    template.innerHTML = str;\n    return template.content.childNodes[0];\n}\n\nfunction createFragmentFromRange(str) {\n    if (!range) {\n        range = doc.createRange();\n        range.selectNode(doc.body);\n    }\n\n    var fragment = range.createContextualFragment(str);\n    return fragment.childNodes[0];\n}\n\nfunction createFragmentFromWrap(str) {\n    var fragment = doc.createElement('body');\n    fragment.innerHTML = str;\n    return fragment.childNodes[0];\n}\n\n/**\n * This is about the same\n * var html = new DOMParser().parseFromString(str, 'text/html');\n * return html.body.firstChild;\n *\n * @method toElement\n * @param {String} str\n */\nfunction toElement(str) {\n    str = str.trim();\n    if (HAS_TEMPLATE_SUPPORT) {\n      // avoid restrictions on content for things like `<tr><th>Hi</th></tr>` which\n      // createContextualFragment doesn't support\n      // <template> support not available in IE\n      return createFragmentFromTemplate(str);\n    } else if (HAS_RANGE_SUPPORT) {\n      return createFragmentFromRange(str);\n    }\n\n    return createFragmentFromWrap(str);\n}\n\n/**\n * Returns true if two node's names are the same.\n *\n * NOTE: We don't bother checking `namespaceURI` because you will never find two HTML elements with the same\n *       nodeName and different namespace URIs.\n *\n * @param {Element} a\n * @param {Element} b The target element\n * @return {boolean}\n */\nfunction compareNodeNames(fromEl, toEl) {\n    var fromNodeName = fromEl.nodeName;\n    var toNodeName = toEl.nodeName;\n    var fromCodeStart, toCodeStart;\n\n    if (fromNodeName === toNodeName) {\n        return true;\n    }\n\n    fromCodeStart = fromNodeName.charCodeAt(0);\n    toCodeStart = toNodeName.charCodeAt(0);\n\n    // If the target element is a virtual DOM node or SVG node then we may\n    // need to normalize the tag name before comparing. Normal HTML elements that are\n    // in the \"http://www.w3.org/1999/xhtml\"\n    // are converted to upper case\n    if (fromCodeStart <= 90 && toCodeStart >= 97) { // from is upper and to is lower\n        return fromNodeName === toNodeName.toUpperCase();\n    } else if (toCodeStart <= 90 && fromCodeStart >= 97) { // to is upper and from is lower\n        return toNodeName === fromNodeName.toUpperCase();\n    } else {\n        return false;\n    }\n}\n\n/**\n * Create an element, optionally with a known namespace URI.\n *\n * @param {string} name the element name, e.g. 'div' or 'svg'\n * @param {string} [namespaceURI] the element's namespace URI, i.e. the value of\n * its `xmlns` attribute or its inferred namespace.\n *\n * @return {Element}\n */\nfunction createElementNS(name, namespaceURI) {\n    return !namespaceURI || namespaceURI === NS_XHTML ?\n        doc.createElement(name) :\n        doc.createElementNS(namespaceURI, name);\n}\n\n/**\n * Copies the children of one DOM element to another DOM element\n */\nfunction moveChildren(fromEl, toEl) {\n    var curChild = fromEl.firstChild;\n    while (curChild) {\n        var nextChild = curChild.nextSibling;\n        toEl.appendChild(curChild);\n        curChild = nextChild;\n    }\n    return toEl;\n}\n\nfunction syncBooleanAttrProp(fromEl, toEl, name) {\n    if (fromEl[name] !== toEl[name]) {\n        fromEl[name] = toEl[name];\n        if (fromEl[name]) {\n            fromEl.setAttribute(name, '');\n        } else {\n            fromEl.removeAttribute(name);\n        }\n    }\n}\n\nvar specialElHandlers = {\n    OPTION: function(fromEl, toEl) {\n        var parentNode = fromEl.parentNode;\n        if (parentNode) {\n            var parentName = parentNode.nodeName.toUpperCase();\n            if (parentName === 'OPTGROUP') {\n                parentNode = parentNode.parentNode;\n                parentName = parentNode && parentNode.nodeName.toUpperCase();\n            }\n            if (parentName === 'SELECT' && !parentNode.hasAttribute('multiple')) {\n                if (fromEl.hasAttribute('selected') && !toEl.selected) {\n                    // Workaround for MS Edge bug where the 'selected' attribute can only be\n                    // removed if set to a non-empty value:\n                    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12087679/\n                    fromEl.setAttribute('selected', 'selected');\n                    fromEl.removeAttribute('selected');\n                }\n                // We have to reset select element's selectedIndex to -1, otherwise setting\n                // fromEl.selected using the syncBooleanAttrProp below has no effect.\n                // The correct selectedIndex will be set in the SELECT special handler below.\n                parentNode.selectedIndex = -1;\n            }\n        }\n        syncBooleanAttrProp(fromEl, toEl, 'selected');\n    },\n    /**\n     * The \"value\" attribute is special for the <input> element since it sets\n     * the initial value. Changing the \"value\" attribute without changing the\n     * \"value\" property will have no effect since it is only used to the set the\n     * initial value.  Similar for the \"checked\" attribute, and \"disabled\".\n     */\n    INPUT: function(fromEl, toEl) {\n        syncBooleanAttrProp(fromEl, toEl, 'checked');\n        syncBooleanAttrProp(fromEl, toEl, 'disabled');\n\n        if (fromEl.value !== toEl.value) {\n            fromEl.value = toEl.value;\n        }\n\n        if (!toEl.hasAttribute('value')) {\n            fromEl.removeAttribute('value');\n        }\n    },\n\n    TEXTAREA: function(fromEl, toEl) {\n        var newValue = toEl.value;\n        if (fromEl.value !== newValue) {\n            fromEl.value = newValue;\n        }\n\n        var firstChild = fromEl.firstChild;\n        if (firstChild) {\n            // Needed for IE. Apparently IE sets the placeholder as the\n            // node value and vise versa. This ignores an empty update.\n            var oldValue = firstChild.nodeValue;\n\n            if (oldValue == newValue || (!newValue && oldValue == fromEl.placeholder)) {\n                return;\n            }\n\n            firstChild.nodeValue = newValue;\n        }\n    },\n    SELECT: function(fromEl, toEl) {\n        if (!toEl.hasAttribute('multiple')) {\n            var selectedIndex = -1;\n            var i = 0;\n            // We have to loop through children of fromEl, not toEl since nodes can be moved\n            // from toEl to fromEl directly when morphing.\n            // At the time this special handler is invoked, all children have already been morphed\n            // and appended to / removed from fromEl, so using fromEl here is safe and correct.\n            var curChild = fromEl.firstChild;\n            var optgroup;\n            var nodeName;\n            while(curChild) {\n                nodeName = curChild.nodeName && curChild.nodeName.toUpperCase();\n                if (nodeName === 'OPTGROUP') {\n                    optgroup = curChild;\n                    curChild = optgroup.firstChild;\n                } else {\n                    if (nodeName === 'OPTION') {\n                        if (curChild.hasAttribute('selected')) {\n                            selectedIndex = i;\n                            break;\n                        }\n                        i++;\n                    }\n                    curChild = curChild.nextSibling;\n                    if (!curChild && optgroup) {\n                        curChild = optgroup.nextSibling;\n                        optgroup = null;\n                    }\n                }\n            }\n\n            fromEl.selectedIndex = selectedIndex;\n        }\n    }\n};\n\nvar ELEMENT_NODE = 1;\nvar DOCUMENT_FRAGMENT_NODE$1 = 11;\nvar TEXT_NODE = 3;\nvar COMMENT_NODE = 8;\n\nfunction noop() {}\n\nfunction defaultGetNodeKey(node) {\n  if (node) {\n    return (node.getAttribute && node.getAttribute('id')) || node.id;\n  }\n}\n\nfunction morphdomFactory(morphAttrs) {\n\n  return function morphdom(fromNode, toNode, options) {\n    if (!options) {\n      options = {};\n    }\n\n    if (typeof toNode === 'string') {\n      if (fromNode.nodeName === '#document' || fromNode.nodeName === 'HTML' || fromNode.nodeName === 'BODY') {\n        var toNodeHtml = toNode;\n        toNode = doc.createElement('html');\n        toNode.innerHTML = toNodeHtml;\n      } else {\n        toNode = toElement(toNode);\n      }\n    } else if (toNode.nodeType === DOCUMENT_FRAGMENT_NODE$1) {\n      toNode = toNode.firstElementChild;\n    }\n\n    var getNodeKey = options.getNodeKey || defaultGetNodeKey;\n    var onBeforeNodeAdded = options.onBeforeNodeAdded || noop;\n    var onNodeAdded = options.onNodeAdded || noop;\n    var onBeforeElUpdated = options.onBeforeElUpdated || noop;\n    var onElUpdated = options.onElUpdated || noop;\n    var onBeforeNodeDiscarded = options.onBeforeNodeDiscarded || noop;\n    var onNodeDiscarded = options.onNodeDiscarded || noop;\n    var onBeforeElChildrenUpdated = options.onBeforeElChildrenUpdated || noop;\n    var skipFromChildren = options.skipFromChildren || noop;\n    var addChild = options.addChild || function(parent, child){ return parent.appendChild(child); };\n    var childrenOnly = options.childrenOnly === true;\n\n    // This object is used as a lookup to quickly find all keyed elements in the original DOM tree.\n    var fromNodesLookup = Object.create(null);\n    var keyedRemovalList = [];\n\n    function addKeyedRemoval(key) {\n      keyedRemovalList.push(key);\n    }\n\n    function walkDiscardedChildNodes(node, skipKeyedNodes) {\n      if (node.nodeType === ELEMENT_NODE) {\n        var curChild = node.firstChild;\n        while (curChild) {\n\n          var key = undefined;\n\n          if (skipKeyedNodes && (key = getNodeKey(curChild))) {\n            // If we are skipping keyed nodes then we add the key\n            // to a list so that it can be handled at the very end.\n            addKeyedRemoval(key);\n          } else {\n            // Only report the node as discarded if it is not keyed. We do this because\n            // at the end we loop through all keyed elements that were unmatched\n            // and then discard them in one final pass.\n            onNodeDiscarded(curChild);\n            if (curChild.firstChild) {\n              walkDiscardedChildNodes(curChild, skipKeyedNodes);\n            }\n          }\n\n          curChild = curChild.nextSibling;\n        }\n      }\n    }\n\n    /**\n    * Removes a DOM node out of the original DOM\n    *\n    * @param  {Node} node The node to remove\n    * @param  {Node} parentNode The nodes parent\n    * @param  {Boolean} skipKeyedNodes If true then elements with keys will be skipped and not discarded.\n    * @return {undefined}\n    */\n    function removeNode(node, parentNode, skipKeyedNodes) {\n      if (onBeforeNodeDiscarded(node) === false) {\n        return;\n      }\n\n      if (parentNode) {\n        parentNode.removeChild(node);\n      }\n\n      onNodeDiscarded(node);\n      walkDiscardedChildNodes(node, skipKeyedNodes);\n    }\n\n    // // TreeWalker implementation is no faster, but keeping this around in case this changes in the future\n    // function indexTree(root) {\n    //     var treeWalker = document.createTreeWalker(\n    //         root,\n    //         NodeFilter.SHOW_ELEMENT);\n    //\n    //     var el;\n    //     while((el = treeWalker.nextNode())) {\n    //         var key = getNodeKey(el);\n    //         if (key) {\n    //             fromNodesLookup[key] = el;\n    //         }\n    //     }\n    // }\n\n    // // NodeIterator implementation is no faster, but keeping this around in case this changes in the future\n    //\n    // function indexTree(node) {\n    //     var nodeIterator = document.createNodeIterator(node, NodeFilter.SHOW_ELEMENT);\n    //     var el;\n    //     while((el = nodeIterator.nextNode())) {\n    //         var key = getNodeKey(el);\n    //         if (key) {\n    //             fromNodesLookup[key] = el;\n    //         }\n    //     }\n    // }\n\n    function indexTree(node) {\n      if (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE$1) {\n        var curChild = node.firstChild;\n        while (curChild) {\n          var key = getNodeKey(curChild);\n          if (key) {\n            fromNodesLookup[key] = curChild;\n          }\n\n          // Walk recursively\n          indexTree(curChild);\n\n          curChild = curChild.nextSibling;\n        }\n      }\n    }\n\n    indexTree(fromNode);\n\n    function handleNodeAdded(el) {\n      onNodeAdded(el);\n\n      var curChild = el.firstChild;\n      while (curChild) {\n        var nextSibling = curChild.nextSibling;\n\n        var key = getNodeKey(curChild);\n        if (key) {\n          var unmatchedFromEl = fromNodesLookup[key];\n          // if we find a duplicate #id node in cache, replace `el` with cache value\n          // and morph it to the child node.\n          if (unmatchedFromEl && compareNodeNames(curChild, unmatchedFromEl)) {\n            curChild.parentNode.replaceChild(unmatchedFromEl, curChild);\n            morphEl(unmatchedFromEl, curChild);\n          } else {\n            handleNodeAdded(curChild);\n          }\n        } else {\n          // recursively call for curChild and it's children to see if we find something in\n          // fromNodesLookup\n          handleNodeAdded(curChild);\n        }\n\n        curChild = nextSibling;\n      }\n    }\n\n    function cleanupFromEl(fromEl, curFromNodeChild, curFromNodeKey) {\n      // We have processed all of the \"to nodes\". If curFromNodeChild is\n      // non-null then we still have some from nodes left over that need\n      // to be removed\n      while (curFromNodeChild) {\n        var fromNextSibling = curFromNodeChild.nextSibling;\n        if ((curFromNodeKey = getNodeKey(curFromNodeChild))) {\n          // Since the node is keyed it might be matched up later so we defer\n          // the actual removal to later\n          addKeyedRemoval(curFromNodeKey);\n        } else {\n          // NOTE: we skip nested keyed nodes from being removed since there is\n          //       still a chance they will be matched up later\n          removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n        }\n        curFromNodeChild = fromNextSibling;\n      }\n    }\n\n    function morphEl(fromEl, toEl, childrenOnly) {\n      var toElKey = getNodeKey(toEl);\n\n      if (toElKey) {\n        // If an element with an ID is being morphed then it will be in the final\n        // DOM so clear it out of the saved elements collection\n        delete fromNodesLookup[toElKey];\n      }\n\n      if (!childrenOnly) {\n        // optional\n        if (onBeforeElUpdated(fromEl, toEl) === false) {\n          return;\n        }\n\n        // update attributes on original DOM element first\n        morphAttrs(fromEl, toEl);\n        // optional\n        onElUpdated(fromEl);\n\n        if (onBeforeElChildrenUpdated(fromEl, toEl) === false) {\n          return;\n        }\n      }\n\n      if (fromEl.nodeName !== 'TEXTAREA') {\n        morphChildren(fromEl, toEl);\n      } else {\n        specialElHandlers.TEXTAREA(fromEl, toEl);\n      }\n    }\n\n    function morphChildren(fromEl, toEl) {\n      var skipFrom = skipFromChildren(fromEl);\n      var curToNodeChild = toEl.firstChild;\n      var curFromNodeChild = fromEl.firstChild;\n      var curToNodeKey;\n      var curFromNodeKey;\n\n      var fromNextSibling;\n      var toNextSibling;\n      var matchingFromEl;\n\n      // walk the children\n      outer: while (curToNodeChild) {\n        toNextSibling = curToNodeChild.nextSibling;\n        curToNodeKey = getNodeKey(curToNodeChild);\n\n        // walk the fromNode children all the way through\n        while (!skipFrom && curFromNodeChild) {\n          fromNextSibling = curFromNodeChild.nextSibling;\n\n          if (curToNodeChild.isSameNode && curToNodeChild.isSameNode(curFromNodeChild)) {\n            curToNodeChild = toNextSibling;\n            curFromNodeChild = fromNextSibling;\n            continue outer;\n          }\n\n          curFromNodeKey = getNodeKey(curFromNodeChild);\n\n          var curFromNodeType = curFromNodeChild.nodeType;\n\n          // this means if the curFromNodeChild doesnt have a match with the curToNodeChild\n          var isCompatible = undefined;\n\n          if (curFromNodeType === curToNodeChild.nodeType) {\n            if (curFromNodeType === ELEMENT_NODE) {\n              // Both nodes being compared are Element nodes\n\n              if (curToNodeKey) {\n                // The target node has a key so we want to match it up with the correct element\n                // in the original DOM tree\n                if (curToNodeKey !== curFromNodeKey) {\n                  // The current element in the original DOM tree does not have a matching key so\n                  // let's check our lookup to see if there is a matching element in the original\n                  // DOM tree\n                  if ((matchingFromEl = fromNodesLookup[curToNodeKey])) {\n                    if (fromNextSibling === matchingFromEl) {\n                      // Special case for single element removals. To avoid removing the original\n                      // DOM node out of the tree (since that can break CSS transitions, etc.),\n                      // we will instead discard the current node and wait until the next\n                      // iteration to properly match up the keyed target element with its matching\n                      // element in the original tree\n                      isCompatible = false;\n                    } else {\n                      // We found a matching keyed element somewhere in the original DOM tree.\n                      // Let's move the original DOM node into the current position and morph\n                      // it.\n\n                      // NOTE: We use insertBefore instead of replaceChild because we want to go through\n                      // the `removeNode()` function for the node that is being discarded so that\n                      // all lifecycle hooks are correctly invoked\n                      fromEl.insertBefore(matchingFromEl, curFromNodeChild);\n\n                      // fromNextSibling = curFromNodeChild.nextSibling;\n\n                      if (curFromNodeKey) {\n                        // Since the node is keyed it might be matched up later so we defer\n                        // the actual removal to later\n                        addKeyedRemoval(curFromNodeKey);\n                      } else {\n                        // NOTE: we skip nested keyed nodes from being removed since there is\n                        //       still a chance they will be matched up later\n                        removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                      }\n\n                      curFromNodeChild = matchingFromEl;\n                    }\n                  } else {\n                    // The nodes are not compatible since the \"to\" node has a key and there\n                    // is no matching keyed node in the source tree\n                    isCompatible = false;\n                  }\n                }\n              } else if (curFromNodeKey) {\n                // The original has a key\n                isCompatible = false;\n              }\n\n              isCompatible = isCompatible !== false && compareNodeNames(curFromNodeChild, curToNodeChild);\n              if (isCompatible) {\n                // We found compatible DOM elements so transform\n                // the current \"from\" node to match the current\n                // target DOM node.\n                // MORPH\n                morphEl(curFromNodeChild, curToNodeChild);\n              }\n\n            } else if (curFromNodeType === TEXT_NODE || curFromNodeType == COMMENT_NODE) {\n              // Both nodes being compared are Text or Comment nodes\n              isCompatible = true;\n              // Simply update nodeValue on the original node to\n              // change the text value\n              if (curFromNodeChild.nodeValue !== curToNodeChild.nodeValue) {\n                curFromNodeChild.nodeValue = curToNodeChild.nodeValue;\n              }\n\n            }\n          }\n\n          if (isCompatible) {\n            // Advance both the \"to\" child and the \"from\" child since we found a match\n            // Nothing else to do as we already recursively called morphChildren above\n            curToNodeChild = toNextSibling;\n            curFromNodeChild = fromNextSibling;\n            continue outer;\n          }\n\n          // No compatible match so remove the old node from the DOM and continue trying to find a\n          // match in the original DOM. However, we only do this if the from node is not keyed\n          // since it is possible that a keyed node might match up with a node somewhere else in the\n          // target tree and we don't want to discard it just yet since it still might find a\n          // home in the final DOM tree. After everything is done we will remove any keyed nodes\n          // that didn't find a home\n          if (curFromNodeKey) {\n            // Since the node is keyed it might be matched up later so we defer\n            // the actual removal to later\n            addKeyedRemoval(curFromNodeKey);\n          } else {\n            // NOTE: we skip nested keyed nodes from being removed since there is\n            //       still a chance they will be matched up later\n            removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n          }\n\n          curFromNodeChild = fromNextSibling;\n        } // END: while(curFromNodeChild) {}\n\n        // If we got this far then we did not find a candidate match for\n        // our \"to node\" and we exhausted all of the children \"from\"\n        // nodes. Therefore, we will just append the current \"to\" node\n        // to the end\n        if (curToNodeKey && (matchingFromEl = fromNodesLookup[curToNodeKey]) && compareNodeNames(matchingFromEl, curToNodeChild)) {\n          // MORPH\n          if(!skipFrom){ addChild(fromEl, matchingFromEl); }\n          morphEl(matchingFromEl, curToNodeChild);\n        } else {\n          var onBeforeNodeAddedResult = onBeforeNodeAdded(curToNodeChild);\n          if (onBeforeNodeAddedResult !== false) {\n            if (onBeforeNodeAddedResult) {\n              curToNodeChild = onBeforeNodeAddedResult;\n            }\n\n            if (curToNodeChild.actualize) {\n              curToNodeChild = curToNodeChild.actualize(fromEl.ownerDocument || doc);\n            }\n            addChild(fromEl, curToNodeChild);\n            handleNodeAdded(curToNodeChild);\n          }\n        }\n\n        curToNodeChild = toNextSibling;\n        curFromNodeChild = fromNextSibling;\n      }\n\n      cleanupFromEl(fromEl, curFromNodeChild, curFromNodeKey);\n\n      var specialElHandler = specialElHandlers[fromEl.nodeName];\n      if (specialElHandler) {\n        specialElHandler(fromEl, toEl);\n      }\n    } // END: morphChildren(...)\n\n    var morphedNode = fromNode;\n    var morphedNodeType = morphedNode.nodeType;\n    var toNodeType = toNode.nodeType;\n\n    if (!childrenOnly) {\n      // Handle the case where we are given two DOM nodes that are not\n      // compatible (e.g. <div> --> <span> or <div> --> TEXT)\n      if (morphedNodeType === ELEMENT_NODE) {\n        if (toNodeType === ELEMENT_NODE) {\n          if (!compareNodeNames(fromNode, toNode)) {\n            onNodeDiscarded(fromNode);\n            morphedNode = moveChildren(fromNode, createElementNS(toNode.nodeName, toNode.namespaceURI));\n          }\n        } else {\n          // Going from an element node to a text node\n          morphedNode = toNode;\n        }\n      } else if (morphedNodeType === TEXT_NODE || morphedNodeType === COMMENT_NODE) { // Text or comment node\n        if (toNodeType === morphedNodeType) {\n          if (morphedNode.nodeValue !== toNode.nodeValue) {\n            morphedNode.nodeValue = toNode.nodeValue;\n          }\n\n          return morphedNode;\n        } else {\n          // Text node to something else\n          morphedNode = toNode;\n        }\n      }\n    }\n\n    if (morphedNode === toNode) {\n      // The \"to node\" was not compatible with the \"from node\" so we had to\n      // toss out the \"from node\" and use the \"to node\"\n      onNodeDiscarded(fromNode);\n    } else {\n      if (toNode.isSameNode && toNode.isSameNode(morphedNode)) {\n        return;\n      }\n\n      morphEl(morphedNode, toNode, childrenOnly);\n\n      // We now need to loop over any keyed nodes that might need to be\n      // removed. We only do the removal if we know that the keyed node\n      // never found a match. When a keyed node is matched up we remove\n      // it out of fromNodesLookup and we use fromNodesLookup to determine\n      // if a keyed node has been matched up or not\n      if (keyedRemovalList) {\n        for (var i=0, len=keyedRemovalList.length; i<len; i++) {\n          var elToRemove = fromNodesLookup[keyedRemovalList[i]];\n          if (elToRemove) {\n            removeNode(elToRemove, elToRemove.parentNode, false);\n          }\n        }\n      }\n    }\n\n    if (!childrenOnly && morphedNode !== fromNode && fromNode.parentNode) {\n      if (morphedNode.actualize) {\n        morphedNode = morphedNode.actualize(fromNode.ownerDocument || doc);\n      }\n      // If we had to swap out the from node with a new node because the old\n      // node was not compatible with the target node then we need to\n      // replace the old DOM node in the original DOM tree. This is only\n      // possible if the original DOM node was part of a DOM tree which\n      // we know is the case if it has a parent node.\n      fromNode.parentNode.replaceChild(morphedNode, fromNode);\n    }\n\n    return morphedNode;\n  };\n}\n\nvar morphdom = morphdomFactory(morphAttrs);\n\nexport default morphdom;\n","const customEvent = (() => {\n\treturn ('CustomEvent' in window && typeof window.CustomEvent === 'function')\n\t\t? (name, data) => new CustomEvent(name, data)\n\t\t: (name, data) => {\n\t\t\tconst newEvent = document.createEvent('CustomEvent')\n\t\t\tnewEvent.initCustomEvent(name, true, true, data)\n\t\t\treturn newEvent\n\t\t}\n})()\n\nconst handler = (node, ev) => {\n\treturn function (e) {\n\t\tconst scope = this\n\t\tconst detail = e.detail || {}\n\t\tnode.__events[ev].forEach(o => {\n\t\t\to.handler.apply(scope, [e].concat(detail.args))\n\t\t})\n\t}\n}\n\nconst removeListener = (node, ev) => {\n\tif (node.__events[ev] && node.__events[ev].listener) {\n\t\tnode.removeEventListener(\n\t\t\tev,\n\t\t\tnode.__events[ev].listener,\n\t\t\t(ev == 'focus' || ev == 'blur' || ev == 'mouseenter' || ev == 'mouseleave'))\n\t\tdelete node.__events[ev]\n\t}\n}\n\nconst delegate = (node, selector, callback) => {\n\treturn function (e) {\n\n\t\tconst element = this\n\t\tconst detail = e.detail || {}\n\n\t\tlet parent = e.target\n\n\t\twhile (parent) {\n\t\t\tif (parent.matches(selector)) {\n\t\t\t\te.delegateTarget = parent\n\t\t\t\tcallback.apply(element, [e].concat(detail.args))\n\t\t\t}\n\t\t\tif (parent === node) break\n\t\t\tparent = parent.parentNode\n\t\t}\n\t}\n}\n\nexport const on = (node, ev, selectorOrCallback, callback) => {\n\n\tnode.__events = node.__events || {}\n\tnode.__events[ev] = (node.__events[ev] || [])\n\n\tif (!node.__events[ev].length) {\n\t\tconst fn = handler(node, ev)\n\t\tnode.addEventListener(\n\t\t\tev,\n\t\t\tfn,\n\t\t\t(ev == 'focus' || ev == 'blur' || ev == 'mouseenter' || ev == 'mouseleave'))\n\t\tnode.__events[ev].listener = fn\n\t}\n\n\tif (selectorOrCallback.call) {\n\t\tnode.__events[ev].push({ handler: selectorOrCallback, callback: selectorOrCallback })\n\t} else {\n\t\tnode.__events[ev].push({ handler: delegate(node, selectorOrCallback, callback), callback })\n\t}\n}\n\nexport const off = (node, ev, fn) => {\n\n\tif (fn && node.__events[ev] && node.__events[ev].length) {\n\t\tvar old = node.__events[ev]\n\t\tnode.__events[ev] = node.__events[ev].filter(function (o) { return o.callback != fn; })\n\t\tnode.__events[ev].listener = old.listener\n\t\tif (!node.__events[ev].length)\n\t\t\tremoveListener(node, ev)\n\t} else {\n\t\tremoveListener(node, ev)\n\t}\n}\n\nexport const trigger = (node, name, args) => {\n\tnode.dispatchEvent(customEvent(name, { bubbles: true, detail: args }))\n}\n","const topics: any = {}\nconst _async: any = {}\n\nexport const publish = (name, params) => {\n\t_async[name] = Object.assign({}, _async[name], params)\n\tif (topics[name])\n\t\ttopics[name].forEach(topic => topic(params))\n}\n\nexport const subscribe = (name, method) => {\n\ttopics[name] = topics[name] || []\n\ttopics[name].push(method)\n\tif (name in _async) {\n\t\tmethod(_async[name])\n\t}\n\treturn () => {\n\t\ttopics[name] = topics[name].filter( fn => fn != method )\n\t}\n}\n\n","import morphdom from 'morphdom'\n\nimport { rAF, dup, safe } from './utils'\nimport { buildtemplates } from './template-system'\nimport { on, off, trigger } from './utils/events'\nimport { publish, subscribe } from './utils/pubsub'\n\nexport default function Component( elm, { module, dependencies, templates, components, $scopes }) {\n\n\tconst options = getOptions( module )\n\n\tbuildtemplates( elm, components, templates, $scopes )\n\n\tconst htmlModel = elm.getAttribute('html-model')\n\tconst initialState = htmlModel? (new Function(`return ${htmlModel}`))() : {}\n\tconst tplid = elm.getAttribute('tplid')\n\tconst template = tplid ? templates[tplid] : null\n\tconst state = { data: module.model ? dup(module.model) : {} }\n\tconst scope = $scopes[tplid] && $scopes[tplid].length? $scopes[tplid].shift() : {}\n\tstate.data = Object.assign(scope, state.data, initialState)\n\n\tconst base = {\n\t\ttemplate,\n\t\telm,\n\t\tdependencies,\n\t\tpublish,\n\t\tsubscribe,\n\n\t\tmain(fn) {\n\t\t\toptions.main = fn\n\t\t},\n\n\t\tunmount(fn) {\n\t\t\toptions.unmount = fn\n\t\t},\n\n\t\tonupdate(fn) {\n\t\t\toptions.onupdate = fn\n\t\t},\n\n\t\ton(eventName, selectorOrCallback, callback) {\n\t\t\ton(elm, eventName, selectorOrCallback, callback)\n\t\t},\n\n\t\toff(eventName, callback) {\n\t\t\toff(elm, eventName, callback)\n\t\t},\n\n\t\ttrigger(eventName, target, args) {\n\t\t\tif (target.constructor === String) {\n\t\t\t\tArray\n\t\t\t\t\t.from(elm.querySelectorAll(target))\n\t\t\t\t\t.forEach( children => trigger(children, eventName, { args: args }) )\n\t\t\t}\n\t\t\telse trigger(elm, eventName, { args: target })\n\t\t},\n\n\t\temit: ( ...args ) => {\n\t\t\ttrigger(elm, args.shift(), { args: args })\n\t\t},\n\n\t\tstate: {\n\t\t\tset( data ) {\n\t\t\t\tif (data.constructor === Function) {\n\t\t\t\t\tconst newstate = dup(state.data)\n\t\t\t\t\tdata(newstate)\n\t\t\t\t\tbase.render(newstate)\n\t\t\t\t} else {\n\t\t\t\t\tbase.render(data)\n\t\t\t\t}\n\t\t\t\treturn new Promise((resolve) => rAF(_ => rAF(() => resolve(state.data))))\n\t\t\t},\n\t\t\tget() {\n\t\t\t\treturn dup(state.data)\n\t\t\t},\n\n\t\t\tgetRaw(){\n\t\t\t\treturn state.data\n\t\t\t}\n\t\t},\n\n\t\trender(data = state.data) {\n\n\t\t\tif (!document.body.contains(elm)) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tstate.data = Object.assign(state.data, data)\n\n\t\t\tconst newdata = dup(state.data)\n\t\t\tconst newhtml = base.template.call(options.view(newdata), elm, safe, $scopes)\n\n\t\t\tmorphdom(elm, newhtml, morphdomOptions(elm, options))\n\n\t\t\trAF(_ => {\n\t\t\t\tArray\n\t\t\t\t\t.from(elm.querySelectorAll('[tplid]'))\n\t\t\t\t\t.forEach((child: any) => {\n\t\t\t\t\t\tconst data = Object.assign( child.base.state.getRaw(), newdata)\n\t\t\t\t\t\tchild.options.onupdate(data)\n\t\t\t\t\t\tchild.base.render(data)\n\t\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\treturn { base, options }\n}\n\nconst getOptions = (module) => ({\n\tmain: (a) => a,\n\tunmount: (a) => a,\n\tonupdate: (a) => a,\n\tview: module.view ? module.view : (a) => a\n})\n\nconst morphdomOptions = (_parent ) => ({\n\tonNodeAdded: onUpdates,\n\tonElUpdated: onUpdates,\n\tonBeforeElChildrenUpdated: checkStatic,\n\tonBeforeElUpdated: checkStatic\n})\n\nconst checkStatic = (node) => {\n\tif ('html-static' in node.attributes) {\n\t\treturn false\n\t}\n}\n\nconst onUpdates = (node) => {\n\tif (node.nodeType === 1) {\n\t\tif ( node.getAttribute('tplid') ) {\n\t\t\treturn false\n\t\t}\n\t}\n\treturn node\n}\n","import Component from './component'\nimport { purge, rAF } from './utils'\n\nexport default function Element(module, dependencies, templates, components, $scopes) {\n\n\treturn class extends HTMLElement {\n\n\t\tbase: any\n\t\toptions: any\n\t\treturns : any\n\t\t__events: any\n\n\t\tconstructor() {\n\n\t\t\tsuper()\n\n\t\t\tconst { base, options } = Component(this, { module, dependencies, templates, components, $scopes })\n\n\t\t\tthis.base = base\n\t\t\tthis.options = options\n\t\t\tthis.returns = module.default(base)\n\t\t}\n\n\t\tconnectedCallback() {\n\t\t\tthis.base.render()\n\n\t\t\tif( this.returns && this.returns.constructor === Promise ) {\n\t\t\t\tthis.returns.then( _ => {\n\t\t\t\t\tif( this.base  ) {\n\t\t\t\t\t\tthis.options.main()?.forEach(f => f(this.base))\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}else {\n\t\t\t\tthis.options.main()?.forEach(f => f(this.base))\n\t\t\t}\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.options.unmount(this.base)\n\t\t\trAF(() => {\n\t\t\t\tif(!document.body.contains(this) ) {\n\t\t\t\t\tthis.__events? this.__events = null : null\n\t\t\t\t\tthis.base? this.base.elm = null : null\n\t\t\t\t\tthis.base? this.base = null : null\n\t\t\t\t\tpurge(this)\n\t\t\t\t}\n\t\t\t})\n\n\t\t}\n\n\t\tattributeChangedCallback() {\n\t\t\t//TODO\n\t\t}\n\t}\n}\n","import { templateConfig, buildtemplates } from './template-system'\nimport Element from './element'\n\nconst templates = {}\nconst components = {}\nconst $scopes = {}\n\nexport default {\n\n\ttemplateConfig,\n\n\tregister( name:string, module:any, dependencies: object ) {\n\t\tcomponents[name] = { name, module, dependencies }\n\t},\n\n\tstart() {\n\t\tconst body = document.body\n\t\tbuildtemplates( body, components, templates, $scopes )\n\t\tregisterComponents()\n\t}\n}\n\nconst registerComponents = () => {\n\tObject\n\t\t.values( components )\n\t\t.forEach( (component) => {\n\t\t\tconst { name, module, dependencies } = component\n\t\t\tconst Base = Element(module, dependencies, templates, components, $scopes)\n\t\t\tcustomElements.define(name, Base)\n\t\t})\n}\n"],"names":["parser","Transpile","html","config","$scopes","regexTags","virtual","element","htmlForeach","htmlFor","htmlIf","htmlInner","htmlClass","forEachInstruction","selector","split","varname","object","ids","cp","tplid","open","close","wrap","all","key","value","node","_a","_b","rAF","fn","uuid","c","r","dup","o","purge","d","a","i","l","n","safe","execute","val","err","textarea","templateConfig","newconfig","Template","decodedHTML","buildtemplates","target","components","templates","template","createTemplateId","id","DOCUMENT_FRAGMENT_NODE","morphAttrs","fromNode","toNode","toNodeAttrs","attr","attrName","attrNamespaceURI","attrValue","fromValue","fromNodeAttrs","range","NS_XHTML","doc","HAS_TEMPLATE_SUPPORT","HAS_RANGE_SUPPORT","createFragmentFromTemplate","str","createFragmentFromRange","fragment","createFragmentFromWrap","toElement","compareNodeNames","fromEl","toEl","fromNodeName","toNodeName","fromCodeStart","toCodeStart","createElementNS","name","namespaceURI","moveChildren","curChild","nextChild","syncBooleanAttrProp","specialElHandlers","parentNode","parentName","newValue","firstChild","oldValue","selectedIndex","optgroup","nodeName","ELEMENT_NODE","DOCUMENT_FRAGMENT_NODE$1","TEXT_NODE","COMMENT_NODE","noop","defaultGetNodeKey","morphdomFactory","options","toNodeHtml","getNodeKey","onBeforeNodeAdded","onNodeAdded","onBeforeElUpdated","onElUpdated","onBeforeNodeDiscarded","onNodeDiscarded","onBeforeElChildrenUpdated","skipFromChildren","addChild","parent","child","childrenOnly","fromNodesLookup","keyedRemovalList","addKeyedRemoval","walkDiscardedChildNodes","skipKeyedNodes","removeNode","indexTree","handleNodeAdded","el","nextSibling","unmatchedFromEl","morphEl","cleanupFromEl","curFromNodeChild","curFromNodeKey","fromNextSibling","toElKey","morphChildren","skipFrom","curToNodeChild","curToNodeKey","toNextSibling","matchingFromEl","outer","curFromNodeType","isCompatible","onBeforeNodeAddedResult","specialElHandler","morphedNode","morphedNodeType","toNodeType","len","elToRemove","morphdom","customEvent","data","newEvent","handler","ev","e","scope","detail","removeListener","delegate","callback","on","selectorOrCallback","off","old","trigger","args","topics","_async","publish","params","topic","subscribe","method","Component","elm","module","dependencies","getOptions","htmlModel","initialState","state","base","eventName","children","newstate","resolve","_","newdata","newhtml","morphdomOptions","_parent","onUpdates","checkStatic","Element","__publicField","f","index","body","registerComponents","component","Base"],"mappings":"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","x_google_ignoreList":[3]}