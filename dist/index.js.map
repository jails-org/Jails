{"version":3,"file":"index.js","sources":["../src/transpile.ts","../src/utils/index.ts","../src/template-system.ts","../src/utils/pubsub.ts","../node_modules/morphdom/dist/morphdom-esm.js","../src/utils/events.ts","../src/component.ts","../src/element.ts","../src/index.ts"],"sourcesContent":["const parser = new DOMParser()\n\nexport default function Transpile(html, config, $scopes) {\n\n\tconst regexTags = new RegExp(`\\\\${config.tags[0]}(.+?)\\\\${config.tags[1]}`, 'g')\n\tconst virtual = parser.parseFromString(html.replace(/<\\/?template[^>]*>/g, ''), 'text/html')\n\n\tvirtual.querySelectorAll('[html-for], [html-if], [html-inner], [html-class], [html-model]').forEach((element) => {\n\n\t\tconst htmlForeach = element.getAttribute('html-foreach')\n\t\tconst htmlFor \t= element.getAttribute('html-for')\n\t\tconst htmlIf \t= element.getAttribute('html-if')\n\t\tconst htmlInner = element.getAttribute('html-inner')\n\t\tconst htmlClass = element.getAttribute('html-class')\n\t\tconst forEachInstruction = htmlFor || htmlForeach\n\n\t\tif ( forEachInstruction ) {\n\t\t\tconst selector = htmlFor? 'html-for': 'html-foreach'\n\t\t\tconst split = forEachInstruction.match(/(.*)\\sin\\s(.*)/) || ''\n\t\t\tconst varname = split[1]\n\t\t\tconst object = split[2]\n\n\t\t\telement.removeAttribute(selector)\n\n\t\t\tconst ids = Array.from(element.querySelectorAll(`[tplid]:not([${selector}] [tplid])`)).map((cp) => {\n\t\t\t\tconst tplid = cp.getAttribute('tplid')\n\t\t\t\t$scopes[tplid] = []\n\t\t\t\treturn tplid\n\t\t\t})\n\n\t\t\tconst open = document.createTextNode(`%%_(function(){ var $index = 0; for(var $key in safe(function(){ return ${object} }) ){ var ${varname} = ${object}[$key]; ${JSON.stringify(ids).replace(/\\\"/g, \"'\")}.map(function(id){ if($scopes[id]) { $scopes[id][$index] = { ${varname}: ${object}[$key], $index: $index, $key: $key } } }); _%%`)\n\t\t\tconst close = document.createTextNode(`%%_ $index++}})() _%%`)\n\t\t\twrap(open, element, close)\n\t\t}\n\t\tif (htmlIf) {\n\t\t\telement.removeAttribute('html-if')\n\t\t\tconst open = document.createTextNode(`%%_ if ( safe(function(){ return ${htmlIf} }) ){ _%%`)\n\t\t\tconst close = document.createTextNode(`%%_ } _%%`)\n\t\t\twrap(open, element, close)\n\t\t}\n\t\tif (htmlInner) {\n\t\t\telement.removeAttribute('html-inner')\n\t\t\telement.innerHTML = `%%_=${htmlInner}_%%`\n\t\t}\n\t\tif (htmlClass) {\n\t\t\telement.removeAttribute('html-class')\n\t\t\telement.className = (element.className + ` %%_=${htmlClass}_%%`).trim()\n\t\t}\n\t})\n\n\treturn (\n\t\tvirtual.body.innerHTML\n\t\t\t.replace(regexTags, '%%_=$1_%%')\n\t\t\t// Booleans\n\t\t\t// https://meiert.com/en/blog/boolean-attributes-of-html/\n\t\t\t.replace(/html-(allowfullscreen|async|autofocus|autoplay|checked|controls|default|defer|disabled|formnovalidate|inert|ismap|itemscope|loop|multiple|muted|nomodule|novalidate|open|playsinline|readonly|required|reversed|selected)=\\\"(.*?)\\\"/g, `%%_if(safe(function(){ return $2 })){_%%$1%%_}_%%`)\n\t\t\t// The rest\n\t\t\t.replace(/html-(.*?)=\\\"(.*?)\\\"/g, (all, key, value) => {\n\t\t\t\tif (key === 'key' || key === 'model' || key == 'scope') {\n\t\t\t\t\treturn all\n\t\t\t\t}\n\t\t\t\tif (value) {\n\t\t\t\t\tvalue = value.replace(/^{|}$/g, '')\n\t\t\t\t\treturn `${key}=\"%%_=safe(function(){ return ${value} })_%%\"`\n\t\t\t\t} else {\n\t\t\t\t\treturn all\n\t\t\t\t}\n\t\t\t})\n\t)\n}\n\nconst wrap = (open, node, close) => {\n\tnode.parentNode?.insertBefore(open, node)\n\tnode.parentNode?.insertBefore(close, node.nextSibling)\n}\n","export const rAF = (fn) => {\n\tif (requestAnimationFrame)\n\t\treturn requestAnimationFrame(fn)\n\telse\n\t\treturn setTimeout(fn, 1000 / 60)\n}\n\nexport const uuid = () => {\n\treturn 'xxxxxxxx'.replace(/[xy]/g, (c) => {\n\t\tconst r = Math.random() * 8 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8)\n\t\treturn v.toString(8)\n\t})\n}\n\n\nexport const dup = (o) => {\n\treturn JSON.parse(JSON.stringify(o))\n}\n\n// http://crockford.com/javascript/memory/leak.html\nexport const purge = (d) => {\n\tvar a = d.attributes, i, l, n\n\tif (a) {\n\t\tfor (i = a.length - 1; i >= 0; i -= 1) {\n\t\t\tn = a[i].name\n\t\t\tif (typeof d[n] === 'function') {\n\t\t\t\td[n] = null\n\t\t\t}\n\t\t}\n\t}\n\ta = d.childNodes\n\tif (a) {\n\t\tl = a.length\n\t\tfor (i = 0; i < l; i += 1) {\n\t\t\tpurge(d.childNodes[i])\n\t\t}\n\t}\n}\n\nexport const safe = (execute, val) => {\n\ttry{return execute()}catch(err){return val || ''}\n}\n","import Transpile from './transpile'\nimport { uuid } from './utils'\n\nconst textarea = document.createElement('textarea')\n\nconst config = {\n\ttags: ['${', '}']\n}\n\nexport const templateConfig = (newconfig) => {\n\tObject.assign(config, newconfig)\n}\n\nexport default function Template(element, $scopes) {\n\n\tconst html = Transpile(element.outerHTML, config, $scopes)\n\ttextarea.innerHTML = html\n\tconst decodedHTML  = JSON.stringify(textarea.value)\n\n\treturn new Function('$element', 'safe', '$scopes',`\n\t\tvar $data = this;\n\t\twith( $data ){\n\t\t\tvar output=${decodedHTML\n\t\t\t\t.replace(/%%_=(.+?)_%%/g, '\"+safe(function(){return $1;})+\"')\n\t\t\t\t.replace(/%%_(.+?)_%%/g, '\";$1\\noutput+=\"')};return output;\n\t\t}\n\t`)\n}\n\nexport const buildtemplates = ( target, components, templates, $scopes ) => {\n\treturn Array\n\t\t.from(target.querySelectorAll('*'))\n\t\t.filter((node:HTMLElement) => node.tagName.toLowerCase() in components)\n\t\t.reverse()\n\t\t.map((node:HTMLElement) => {\n\t\t\tArray.from(node.querySelectorAll('template'))\n\t\t\t\t.map((template) => buildtemplates(template.content, components, templates, $scopes))\n\t\t\tcreateTemplateId(node, templates, $scopes)\n\t\t\treturn node\n\t\t})\n}\n\nconst createTemplateId = (element, templates, $scopes ) => {\n\tconst tplid = element.getAttribute('tplid')\n\tif (!tplid) {\n\t\tconst id = uuid()\n\t\telement.setAttribute('tplid', id)\n\t\ttemplates[id] = Template(element, $scopes)\n\t}\n}\n\n","const topics: any = {}\nconst _async: any = {}\n\nexport const publish = (name, params) => {\n\t_async[name] = Object.assign({}, _async[name], params)\n\tif (topics[name])\n\t\ttopics[name].forEach(topic => topic(params))\n}\n\nexport const subscribe = (name, method) => {\n\ttopics[name] = topics[name] || []\n\ttopics[name].push(method)\n\tif (name in _async) {\n\t\tmethod(_async[name])\n\t}\n\treturn () => {\n\t\ttopics[name] = topics[name].filter( fn => fn != method )\n\t}\n}\n\n","var DOCUMENT_FRAGMENT_NODE = 11;\n\nfunction morphAttrs(fromNode, toNode) {\n    var toNodeAttrs = toNode.attributes;\n    var attr;\n    var attrName;\n    var attrNamespaceURI;\n    var attrValue;\n    var fromValue;\n\n    // document-fragments dont have attributes so lets not do anything\n    if (toNode.nodeType === DOCUMENT_FRAGMENT_NODE || fromNode.nodeType === DOCUMENT_FRAGMENT_NODE) {\n      return;\n    }\n\n    // update attributes on original DOM element\n    for (var i = toNodeAttrs.length - 1; i >= 0; i--) {\n        attr = toNodeAttrs[i];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n        attrValue = attr.value;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n            fromValue = fromNode.getAttributeNS(attrNamespaceURI, attrName);\n\n            if (fromValue !== attrValue) {\n                if (attr.prefix === 'xmlns'){\n                    attrName = attr.name; // It's not allowed to set an attribute with the XMLNS namespace without specifying the `xmlns` prefix\n                }\n                fromNode.setAttributeNS(attrNamespaceURI, attrName, attrValue);\n            }\n        } else {\n            fromValue = fromNode.getAttribute(attrName);\n\n            if (fromValue !== attrValue) {\n                fromNode.setAttribute(attrName, attrValue);\n            }\n        }\n    }\n\n    // Remove any extra attributes found on the original DOM element that\n    // weren't found on the target element.\n    var fromNodeAttrs = fromNode.attributes;\n\n    for (var d = fromNodeAttrs.length - 1; d >= 0; d--) {\n        attr = fromNodeAttrs[d];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n\n            if (!toNode.hasAttributeNS(attrNamespaceURI, attrName)) {\n                fromNode.removeAttributeNS(attrNamespaceURI, attrName);\n            }\n        } else {\n            if (!toNode.hasAttribute(attrName)) {\n                fromNode.removeAttribute(attrName);\n            }\n        }\n    }\n}\n\nvar range; // Create a range object for efficently rendering strings to elements.\nvar NS_XHTML = 'http://www.w3.org/1999/xhtml';\n\nvar doc = typeof document === 'undefined' ? undefined : document;\nvar HAS_TEMPLATE_SUPPORT = !!doc && 'content' in doc.createElement('template');\nvar HAS_RANGE_SUPPORT = !!doc && doc.createRange && 'createContextualFragment' in doc.createRange();\n\nfunction createFragmentFromTemplate(str) {\n    var template = doc.createElement('template');\n    template.innerHTML = str;\n    return template.content.childNodes[0];\n}\n\nfunction createFragmentFromRange(str) {\n    if (!range) {\n        range = doc.createRange();\n        range.selectNode(doc.body);\n    }\n\n    var fragment = range.createContextualFragment(str);\n    return fragment.childNodes[0];\n}\n\nfunction createFragmentFromWrap(str) {\n    var fragment = doc.createElement('body');\n    fragment.innerHTML = str;\n    return fragment.childNodes[0];\n}\n\n/**\n * This is about the same\n * var html = new DOMParser().parseFromString(str, 'text/html');\n * return html.body.firstChild;\n *\n * @method toElement\n * @param {String} str\n */\nfunction toElement(str) {\n    str = str.trim();\n    if (HAS_TEMPLATE_SUPPORT) {\n      // avoid restrictions on content for things like `<tr><th>Hi</th></tr>` which\n      // createContextualFragment doesn't support\n      // <template> support not available in IE\n      return createFragmentFromTemplate(str);\n    } else if (HAS_RANGE_SUPPORT) {\n      return createFragmentFromRange(str);\n    }\n\n    return createFragmentFromWrap(str);\n}\n\n/**\n * Returns true if two node's names are the same.\n *\n * NOTE: We don't bother checking `namespaceURI` because you will never find two HTML elements with the same\n *       nodeName and different namespace URIs.\n *\n * @param {Element} a\n * @param {Element} b The target element\n * @return {boolean}\n */\nfunction compareNodeNames(fromEl, toEl) {\n    var fromNodeName = fromEl.nodeName;\n    var toNodeName = toEl.nodeName;\n    var fromCodeStart, toCodeStart;\n\n    if (fromNodeName === toNodeName) {\n        return true;\n    }\n\n    fromCodeStart = fromNodeName.charCodeAt(0);\n    toCodeStart = toNodeName.charCodeAt(0);\n\n    // If the target element is a virtual DOM node or SVG node then we may\n    // need to normalize the tag name before comparing. Normal HTML elements that are\n    // in the \"http://www.w3.org/1999/xhtml\"\n    // are converted to upper case\n    if (fromCodeStart <= 90 && toCodeStart >= 97) { // from is upper and to is lower\n        return fromNodeName === toNodeName.toUpperCase();\n    } else if (toCodeStart <= 90 && fromCodeStart >= 97) { // to is upper and from is lower\n        return toNodeName === fromNodeName.toUpperCase();\n    } else {\n        return false;\n    }\n}\n\n/**\n * Create an element, optionally with a known namespace URI.\n *\n * @param {string} name the element name, e.g. 'div' or 'svg'\n * @param {string} [namespaceURI] the element's namespace URI, i.e. the value of\n * its `xmlns` attribute or its inferred namespace.\n *\n * @return {Element}\n */\nfunction createElementNS(name, namespaceURI) {\n    return !namespaceURI || namespaceURI === NS_XHTML ?\n        doc.createElement(name) :\n        doc.createElementNS(namespaceURI, name);\n}\n\n/**\n * Copies the children of one DOM element to another DOM element\n */\nfunction moveChildren(fromEl, toEl) {\n    var curChild = fromEl.firstChild;\n    while (curChild) {\n        var nextChild = curChild.nextSibling;\n        toEl.appendChild(curChild);\n        curChild = nextChild;\n    }\n    return toEl;\n}\n\nfunction syncBooleanAttrProp(fromEl, toEl, name) {\n    if (fromEl[name] !== toEl[name]) {\n        fromEl[name] = toEl[name];\n        if (fromEl[name]) {\n            fromEl.setAttribute(name, '');\n        } else {\n            fromEl.removeAttribute(name);\n        }\n    }\n}\n\nvar specialElHandlers = {\n    OPTION: function(fromEl, toEl) {\n        var parentNode = fromEl.parentNode;\n        if (parentNode) {\n            var parentName = parentNode.nodeName.toUpperCase();\n            if (parentName === 'OPTGROUP') {\n                parentNode = parentNode.parentNode;\n                parentName = parentNode && parentNode.nodeName.toUpperCase();\n            }\n            if (parentName === 'SELECT' && !parentNode.hasAttribute('multiple')) {\n                if (fromEl.hasAttribute('selected') && !toEl.selected) {\n                    // Workaround for MS Edge bug where the 'selected' attribute can only be\n                    // removed if set to a non-empty value:\n                    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12087679/\n                    fromEl.setAttribute('selected', 'selected');\n                    fromEl.removeAttribute('selected');\n                }\n                // We have to reset select element's selectedIndex to -1, otherwise setting\n                // fromEl.selected using the syncBooleanAttrProp below has no effect.\n                // The correct selectedIndex will be set in the SELECT special handler below.\n                parentNode.selectedIndex = -1;\n            }\n        }\n        syncBooleanAttrProp(fromEl, toEl, 'selected');\n    },\n    /**\n     * The \"value\" attribute is special for the <input> element since it sets\n     * the initial value. Changing the \"value\" attribute without changing the\n     * \"value\" property will have no effect since it is only used to the set the\n     * initial value.  Similar for the \"checked\" attribute, and \"disabled\".\n     */\n    INPUT: function(fromEl, toEl) {\n        syncBooleanAttrProp(fromEl, toEl, 'checked');\n        syncBooleanAttrProp(fromEl, toEl, 'disabled');\n\n        if (fromEl.value !== toEl.value) {\n            fromEl.value = toEl.value;\n        }\n\n        if (!toEl.hasAttribute('value')) {\n            fromEl.removeAttribute('value');\n        }\n    },\n\n    TEXTAREA: function(fromEl, toEl) {\n        var newValue = toEl.value;\n        if (fromEl.value !== newValue) {\n            fromEl.value = newValue;\n        }\n\n        var firstChild = fromEl.firstChild;\n        if (firstChild) {\n            // Needed for IE. Apparently IE sets the placeholder as the\n            // node value and vise versa. This ignores an empty update.\n            var oldValue = firstChild.nodeValue;\n\n            if (oldValue == newValue || (!newValue && oldValue == fromEl.placeholder)) {\n                return;\n            }\n\n            firstChild.nodeValue = newValue;\n        }\n    },\n    SELECT: function(fromEl, toEl) {\n        if (!toEl.hasAttribute('multiple')) {\n            var selectedIndex = -1;\n            var i = 0;\n            // We have to loop through children of fromEl, not toEl since nodes can be moved\n            // from toEl to fromEl directly when morphing.\n            // At the time this special handler is invoked, all children have already been morphed\n            // and appended to / removed from fromEl, so using fromEl here is safe and correct.\n            var curChild = fromEl.firstChild;\n            var optgroup;\n            var nodeName;\n            while(curChild) {\n                nodeName = curChild.nodeName && curChild.nodeName.toUpperCase();\n                if (nodeName === 'OPTGROUP') {\n                    optgroup = curChild;\n                    curChild = optgroup.firstChild;\n                } else {\n                    if (nodeName === 'OPTION') {\n                        if (curChild.hasAttribute('selected')) {\n                            selectedIndex = i;\n                            break;\n                        }\n                        i++;\n                    }\n                    curChild = curChild.nextSibling;\n                    if (!curChild && optgroup) {\n                        curChild = optgroup.nextSibling;\n                        optgroup = null;\n                    }\n                }\n            }\n\n            fromEl.selectedIndex = selectedIndex;\n        }\n    }\n};\n\nvar ELEMENT_NODE = 1;\nvar DOCUMENT_FRAGMENT_NODE$1 = 11;\nvar TEXT_NODE = 3;\nvar COMMENT_NODE = 8;\n\nfunction noop() {}\n\nfunction defaultGetNodeKey(node) {\n  if (node) {\n    return (node.getAttribute && node.getAttribute('id')) || node.id;\n  }\n}\n\nfunction morphdomFactory(morphAttrs) {\n\n  return function morphdom(fromNode, toNode, options) {\n    if (!options) {\n      options = {};\n    }\n\n    if (typeof toNode === 'string') {\n      if (fromNode.nodeName === '#document' || fromNode.nodeName === 'HTML' || fromNode.nodeName === 'BODY') {\n        var toNodeHtml = toNode;\n        toNode = doc.createElement('html');\n        toNode.innerHTML = toNodeHtml;\n      } else {\n        toNode = toElement(toNode);\n      }\n    } else if (toNode.nodeType === DOCUMENT_FRAGMENT_NODE$1) {\n      toNode = toNode.firstElementChild;\n    }\n\n    var getNodeKey = options.getNodeKey || defaultGetNodeKey;\n    var onBeforeNodeAdded = options.onBeforeNodeAdded || noop;\n    var onNodeAdded = options.onNodeAdded || noop;\n    var onBeforeElUpdated = options.onBeforeElUpdated || noop;\n    var onElUpdated = options.onElUpdated || noop;\n    var onBeforeNodeDiscarded = options.onBeforeNodeDiscarded || noop;\n    var onNodeDiscarded = options.onNodeDiscarded || noop;\n    var onBeforeElChildrenUpdated = options.onBeforeElChildrenUpdated || noop;\n    var skipFromChildren = options.skipFromChildren || noop;\n    var addChild = options.addChild || function(parent, child){ return parent.appendChild(child); };\n    var childrenOnly = options.childrenOnly === true;\n\n    // This object is used as a lookup to quickly find all keyed elements in the original DOM tree.\n    var fromNodesLookup = Object.create(null);\n    var keyedRemovalList = [];\n\n    function addKeyedRemoval(key) {\n      keyedRemovalList.push(key);\n    }\n\n    function walkDiscardedChildNodes(node, skipKeyedNodes) {\n      if (node.nodeType === ELEMENT_NODE) {\n        var curChild = node.firstChild;\n        while (curChild) {\n\n          var key = undefined;\n\n          if (skipKeyedNodes && (key = getNodeKey(curChild))) {\n            // If we are skipping keyed nodes then we add the key\n            // to a list so that it can be handled at the very end.\n            addKeyedRemoval(key);\n          } else {\n            // Only report the node as discarded if it is not keyed. We do this because\n            // at the end we loop through all keyed elements that were unmatched\n            // and then discard them in one final pass.\n            onNodeDiscarded(curChild);\n            if (curChild.firstChild) {\n              walkDiscardedChildNodes(curChild, skipKeyedNodes);\n            }\n          }\n\n          curChild = curChild.nextSibling;\n        }\n      }\n    }\n\n    /**\n    * Removes a DOM node out of the original DOM\n    *\n    * @param  {Node} node The node to remove\n    * @param  {Node} parentNode The nodes parent\n    * @param  {Boolean} skipKeyedNodes If true then elements with keys will be skipped and not discarded.\n    * @return {undefined}\n    */\n    function removeNode(node, parentNode, skipKeyedNodes) {\n      if (onBeforeNodeDiscarded(node) === false) {\n        return;\n      }\n\n      if (parentNode) {\n        parentNode.removeChild(node);\n      }\n\n      onNodeDiscarded(node);\n      walkDiscardedChildNodes(node, skipKeyedNodes);\n    }\n\n    // // TreeWalker implementation is no faster, but keeping this around in case this changes in the future\n    // function indexTree(root) {\n    //     var treeWalker = document.createTreeWalker(\n    //         root,\n    //         NodeFilter.SHOW_ELEMENT);\n    //\n    //     var el;\n    //     while((el = treeWalker.nextNode())) {\n    //         var key = getNodeKey(el);\n    //         if (key) {\n    //             fromNodesLookup[key] = el;\n    //         }\n    //     }\n    // }\n\n    // // NodeIterator implementation is no faster, but keeping this around in case this changes in the future\n    //\n    // function indexTree(node) {\n    //     var nodeIterator = document.createNodeIterator(node, NodeFilter.SHOW_ELEMENT);\n    //     var el;\n    //     while((el = nodeIterator.nextNode())) {\n    //         var key = getNodeKey(el);\n    //         if (key) {\n    //             fromNodesLookup[key] = el;\n    //         }\n    //     }\n    // }\n\n    function indexTree(node) {\n      if (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE$1) {\n        var curChild = node.firstChild;\n        while (curChild) {\n          var key = getNodeKey(curChild);\n          if (key) {\n            fromNodesLookup[key] = curChild;\n          }\n\n          // Walk recursively\n          indexTree(curChild);\n\n          curChild = curChild.nextSibling;\n        }\n      }\n    }\n\n    indexTree(fromNode);\n\n    function handleNodeAdded(el) {\n      onNodeAdded(el);\n\n      var curChild = el.firstChild;\n      while (curChild) {\n        var nextSibling = curChild.nextSibling;\n\n        var key = getNodeKey(curChild);\n        if (key) {\n          var unmatchedFromEl = fromNodesLookup[key];\n          // if we find a duplicate #id node in cache, replace `el` with cache value\n          // and morph it to the child node.\n          if (unmatchedFromEl && compareNodeNames(curChild, unmatchedFromEl)) {\n            curChild.parentNode.replaceChild(unmatchedFromEl, curChild);\n            morphEl(unmatchedFromEl, curChild);\n          } else {\n            handleNodeAdded(curChild);\n          }\n        } else {\n          // recursively call for curChild and it's children to see if we find something in\n          // fromNodesLookup\n          handleNodeAdded(curChild);\n        }\n\n        curChild = nextSibling;\n      }\n    }\n\n    function cleanupFromEl(fromEl, curFromNodeChild, curFromNodeKey) {\n      // We have processed all of the \"to nodes\". If curFromNodeChild is\n      // non-null then we still have some from nodes left over that need\n      // to be removed\n      while (curFromNodeChild) {\n        var fromNextSibling = curFromNodeChild.nextSibling;\n        if ((curFromNodeKey = getNodeKey(curFromNodeChild))) {\n          // Since the node is keyed it might be matched up later so we defer\n          // the actual removal to later\n          addKeyedRemoval(curFromNodeKey);\n        } else {\n          // NOTE: we skip nested keyed nodes from being removed since there is\n          //       still a chance they will be matched up later\n          removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n        }\n        curFromNodeChild = fromNextSibling;\n      }\n    }\n\n    function morphEl(fromEl, toEl, childrenOnly) {\n      var toElKey = getNodeKey(toEl);\n\n      if (toElKey) {\n        // If an element with an ID is being morphed then it will be in the final\n        // DOM so clear it out of the saved elements collection\n        delete fromNodesLookup[toElKey];\n      }\n\n      if (!childrenOnly) {\n        // optional\n        if (onBeforeElUpdated(fromEl, toEl) === false) {\n          return;\n        }\n\n        // update attributes on original DOM element first\n        morphAttrs(fromEl, toEl);\n        // optional\n        onElUpdated(fromEl);\n\n        if (onBeforeElChildrenUpdated(fromEl, toEl) === false) {\n          return;\n        }\n      }\n\n      if (fromEl.nodeName !== 'TEXTAREA') {\n        morphChildren(fromEl, toEl);\n      } else {\n        specialElHandlers.TEXTAREA(fromEl, toEl);\n      }\n    }\n\n    function morphChildren(fromEl, toEl) {\n      var skipFrom = skipFromChildren(fromEl);\n      var curToNodeChild = toEl.firstChild;\n      var curFromNodeChild = fromEl.firstChild;\n      var curToNodeKey;\n      var curFromNodeKey;\n\n      var fromNextSibling;\n      var toNextSibling;\n      var matchingFromEl;\n\n      // walk the children\n      outer: while (curToNodeChild) {\n        toNextSibling = curToNodeChild.nextSibling;\n        curToNodeKey = getNodeKey(curToNodeChild);\n\n        // walk the fromNode children all the way through\n        while (!skipFrom && curFromNodeChild) {\n          fromNextSibling = curFromNodeChild.nextSibling;\n\n          if (curToNodeChild.isSameNode && curToNodeChild.isSameNode(curFromNodeChild)) {\n            curToNodeChild = toNextSibling;\n            curFromNodeChild = fromNextSibling;\n            continue outer;\n          }\n\n          curFromNodeKey = getNodeKey(curFromNodeChild);\n\n          var curFromNodeType = curFromNodeChild.nodeType;\n\n          // this means if the curFromNodeChild doesnt have a match with the curToNodeChild\n          var isCompatible = undefined;\n\n          if (curFromNodeType === curToNodeChild.nodeType) {\n            if (curFromNodeType === ELEMENT_NODE) {\n              // Both nodes being compared are Element nodes\n\n              if (curToNodeKey) {\n                // The target node has a key so we want to match it up with the correct element\n                // in the original DOM tree\n                if (curToNodeKey !== curFromNodeKey) {\n                  // The current element in the original DOM tree does not have a matching key so\n                  // let's check our lookup to see if there is a matching element in the original\n                  // DOM tree\n                  if ((matchingFromEl = fromNodesLookup[curToNodeKey])) {\n                    if (fromNextSibling === matchingFromEl) {\n                      // Special case for single element removals. To avoid removing the original\n                      // DOM node out of the tree (since that can break CSS transitions, etc.),\n                      // we will instead discard the current node and wait until the next\n                      // iteration to properly match up the keyed target element with its matching\n                      // element in the original tree\n                      isCompatible = false;\n                    } else {\n                      // We found a matching keyed element somewhere in the original DOM tree.\n                      // Let's move the original DOM node into the current position and morph\n                      // it.\n\n                      // NOTE: We use insertBefore instead of replaceChild because we want to go through\n                      // the `removeNode()` function for the node that is being discarded so that\n                      // all lifecycle hooks are correctly invoked\n                      fromEl.insertBefore(matchingFromEl, curFromNodeChild);\n\n                      // fromNextSibling = curFromNodeChild.nextSibling;\n\n                      if (curFromNodeKey) {\n                        // Since the node is keyed it might be matched up later so we defer\n                        // the actual removal to later\n                        addKeyedRemoval(curFromNodeKey);\n                      } else {\n                        // NOTE: we skip nested keyed nodes from being removed since there is\n                        //       still a chance they will be matched up later\n                        removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                      }\n\n                      curFromNodeChild = matchingFromEl;\n                    }\n                  } else {\n                    // The nodes are not compatible since the \"to\" node has a key and there\n                    // is no matching keyed node in the source tree\n                    isCompatible = false;\n                  }\n                }\n              } else if (curFromNodeKey) {\n                // The original has a key\n                isCompatible = false;\n              }\n\n              isCompatible = isCompatible !== false && compareNodeNames(curFromNodeChild, curToNodeChild);\n              if (isCompatible) {\n                // We found compatible DOM elements so transform\n                // the current \"from\" node to match the current\n                // target DOM node.\n                // MORPH\n                morphEl(curFromNodeChild, curToNodeChild);\n              }\n\n            } else if (curFromNodeType === TEXT_NODE || curFromNodeType == COMMENT_NODE) {\n              // Both nodes being compared are Text or Comment nodes\n              isCompatible = true;\n              // Simply update nodeValue on the original node to\n              // change the text value\n              if (curFromNodeChild.nodeValue !== curToNodeChild.nodeValue) {\n                curFromNodeChild.nodeValue = curToNodeChild.nodeValue;\n              }\n\n            }\n          }\n\n          if (isCompatible) {\n            // Advance both the \"to\" child and the \"from\" child since we found a match\n            // Nothing else to do as we already recursively called morphChildren above\n            curToNodeChild = toNextSibling;\n            curFromNodeChild = fromNextSibling;\n            continue outer;\n          }\n\n          // No compatible match so remove the old node from the DOM and continue trying to find a\n          // match in the original DOM. However, we only do this if the from node is not keyed\n          // since it is possible that a keyed node might match up with a node somewhere else in the\n          // target tree and we don't want to discard it just yet since it still might find a\n          // home in the final DOM tree. After everything is done we will remove any keyed nodes\n          // that didn't find a home\n          if (curFromNodeKey) {\n            // Since the node is keyed it might be matched up later so we defer\n            // the actual removal to later\n            addKeyedRemoval(curFromNodeKey);\n          } else {\n            // NOTE: we skip nested keyed nodes from being removed since there is\n            //       still a chance they will be matched up later\n            removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n          }\n\n          curFromNodeChild = fromNextSibling;\n        } // END: while(curFromNodeChild) {}\n\n        // If we got this far then we did not find a candidate match for\n        // our \"to node\" and we exhausted all of the children \"from\"\n        // nodes. Therefore, we will just append the current \"to\" node\n        // to the end\n        if (curToNodeKey && (matchingFromEl = fromNodesLookup[curToNodeKey]) && compareNodeNames(matchingFromEl, curToNodeChild)) {\n          // MORPH\n          if(!skipFrom){ addChild(fromEl, matchingFromEl); }\n          morphEl(matchingFromEl, curToNodeChild);\n        } else {\n          var onBeforeNodeAddedResult = onBeforeNodeAdded(curToNodeChild);\n          if (onBeforeNodeAddedResult !== false) {\n            if (onBeforeNodeAddedResult) {\n              curToNodeChild = onBeforeNodeAddedResult;\n            }\n\n            if (curToNodeChild.actualize) {\n              curToNodeChild = curToNodeChild.actualize(fromEl.ownerDocument || doc);\n            }\n            addChild(fromEl, curToNodeChild);\n            handleNodeAdded(curToNodeChild);\n          }\n        }\n\n        curToNodeChild = toNextSibling;\n        curFromNodeChild = fromNextSibling;\n      }\n\n      cleanupFromEl(fromEl, curFromNodeChild, curFromNodeKey);\n\n      var specialElHandler = specialElHandlers[fromEl.nodeName];\n      if (specialElHandler) {\n        specialElHandler(fromEl, toEl);\n      }\n    } // END: morphChildren(...)\n\n    var morphedNode = fromNode;\n    var morphedNodeType = morphedNode.nodeType;\n    var toNodeType = toNode.nodeType;\n\n    if (!childrenOnly) {\n      // Handle the case where we are given two DOM nodes that are not\n      // compatible (e.g. <div> --> <span> or <div> --> TEXT)\n      if (morphedNodeType === ELEMENT_NODE) {\n        if (toNodeType === ELEMENT_NODE) {\n          if (!compareNodeNames(fromNode, toNode)) {\n            onNodeDiscarded(fromNode);\n            morphedNode = moveChildren(fromNode, createElementNS(toNode.nodeName, toNode.namespaceURI));\n          }\n        } else {\n          // Going from an element node to a text node\n          morphedNode = toNode;\n        }\n      } else if (morphedNodeType === TEXT_NODE || morphedNodeType === COMMENT_NODE) { // Text or comment node\n        if (toNodeType === morphedNodeType) {\n          if (morphedNode.nodeValue !== toNode.nodeValue) {\n            morphedNode.nodeValue = toNode.nodeValue;\n          }\n\n          return morphedNode;\n        } else {\n          // Text node to something else\n          morphedNode = toNode;\n        }\n      }\n    }\n\n    if (morphedNode === toNode) {\n      // The \"to node\" was not compatible with the \"from node\" so we had to\n      // toss out the \"from node\" and use the \"to node\"\n      onNodeDiscarded(fromNode);\n    } else {\n      if (toNode.isSameNode && toNode.isSameNode(morphedNode)) {\n        return;\n      }\n\n      morphEl(morphedNode, toNode, childrenOnly);\n\n      // We now need to loop over any keyed nodes that might need to be\n      // removed. We only do the removal if we know that the keyed node\n      // never found a match. When a keyed node is matched up we remove\n      // it out of fromNodesLookup and we use fromNodesLookup to determine\n      // if a keyed node has been matched up or not\n      if (keyedRemovalList) {\n        for (var i=0, len=keyedRemovalList.length; i<len; i++) {\n          var elToRemove = fromNodesLookup[keyedRemovalList[i]];\n          if (elToRemove) {\n            removeNode(elToRemove, elToRemove.parentNode, false);\n          }\n        }\n      }\n    }\n\n    if (!childrenOnly && morphedNode !== fromNode && fromNode.parentNode) {\n      if (morphedNode.actualize) {\n        morphedNode = morphedNode.actualize(fromNode.ownerDocument || doc);\n      }\n      // If we had to swap out the from node with a new node because the old\n      // node was not compatible with the target node then we need to\n      // replace the old DOM node in the original DOM tree. This is only\n      // possible if the original DOM node was part of a DOM tree which\n      // we know is the case if it has a parent node.\n      fromNode.parentNode.replaceChild(morphedNode, fromNode);\n    }\n\n    return morphedNode;\n  };\n}\n\nvar morphdom = morphdomFactory(morphAttrs);\n\nexport default morphdom;\n","const customEvent = (() => {\n\treturn ('CustomEvent' in window && typeof window.CustomEvent === 'function')\n\t\t? (name, data) => new CustomEvent(name, data)\n\t\t: (name, data) => {\n\t\t\tconst newEvent = document.createEvent('CustomEvent')\n\t\t\tnewEvent.initCustomEvent(name, true, true, data)\n\t\t\treturn newEvent\n\t\t}\n})()\n\nconst handler = (node, ev) => {\n\treturn function (e) {\n\t\tconst scope = this\n\t\tconst detail = e.detail || {}\n\t\tnode.__events[ev].forEach(o => {\n\t\t\to.handler.apply(scope, [e].concat(detail.args))\n\t\t})\n\t}\n}\n\nconst removeListener = (node, ev) => {\n\tif (node.__events[ev] && node.__events[ev].listener) {\n\t\tnode.removeEventListener(\n\t\t\tev,\n\t\t\tnode.__events[ev].listener,\n\t\t\t(ev == 'focus' || ev == 'blur' || ev == 'mouseenter' || ev == 'mouseleave'))\n\t\tdelete node.__events[ev]\n\t}\n}\n\nconst delegate = (node, selector, callback) => {\n\treturn function (e) {\n\n\t\tconst element = this\n\t\tconst detail = e.detail || {}\n\n\t\tlet parent = e.target\n\n\t\twhile (parent) {\n\t\t\tif (parent.matches(selector)) {\n\t\t\t\te.delegateTarget = parent\n\t\t\t\tcallback.apply(element, [e].concat(detail.args))\n\t\t\t}\n\t\t\tif (parent === node) break\n\t\t\tparent = parent.parentNode\n\t\t}\n\t}\n}\n\nexport const on = (node, ev, selectorOrCallback, callback) => {\n\n\tnode.__events = node.__events || {}\n\tnode.__events[ev] = (node.__events[ev] || [])\n\n\tif (!node.__events[ev].length) {\n\t\tconst fn = handler(node, ev)\n\t\tnode.addEventListener(\n\t\t\tev,\n\t\t\tfn,\n\t\t\t(ev == 'focus' || ev == 'blur' || ev == 'mouseenter' || ev == 'mouseleave'))\n\t\tnode.__events[ev].listener = fn\n\t}\n\n\tif (selectorOrCallback.call) {\n\t\tnode.__events[ev].push({ handler: selectorOrCallback, callback: selectorOrCallback })\n\t} else {\n\t\tnode.__events[ev].push({ handler: delegate(node, selectorOrCallback, callback), callback })\n\t}\n}\n\nexport const off = (node, ev, fn) => {\n\n\tif (fn && node.__events[ev] && node.__events[ev].length) {\n\t\tvar old = node.__events[ev]\n\t\tnode.__events[ev] = node.__events[ev].filter(function (o) { return o.callback != fn; })\n\t\tnode.__events[ev].listener = old.listener\n\t\tif (!node.__events[ev].length)\n\t\t\tremoveListener(node, ev)\n\t} else {\n\t\tremoveListener(node, ev)\n\t}\n}\n\nexport const trigger = (node, name, args) => {\n\tnode.dispatchEvent(customEvent(name, { bubbles: true, detail: args }))\n}\n","import { type Component } from '..'\nimport morphdom from 'morphdom'\n\nimport { rAF, dup, safe } from './utils'\nimport { buildtemplates } from './template-system'\nimport { on, off, trigger } from './utils/events'\nimport { publish, subscribe } from './utils/pubsub'\n\nexport default function Component( elm, { module, dependencies, templates, components, $scopes }) {\n\n\tconst tplid = elm.getAttribute('tplid')\n\tconst options = getOptions( module )\n\tconst initialState = (new Function( `return ${elm.getAttribute('html-model') || '{}'}`))()\n\n\tbuildtemplates( elm, components, templates, $scopes )\n\n\tconst template = tplid ? templates[tplid] : null\n\tconst state = { data: module.model ? dup(module.model) : {} }\n\tconst scope = $scopes[tplid] && $scopes[tplid].length? $scopes[tplid].shift() : {}\n\tstate.data = Object.assign(scope, state.data, initialState)\n\n\tconst base: Component = {\n\t\ttemplate,\n\t\telm,\n\t\tdependencies,\n\t\tpublish,\n\t\tsubscribe,\n\n\t\tmain(fn) {\n\t\t\toptions.main = fn\n\t\t},\n\n\t\tunmount(fn) {\n\t\t\toptions.unmount = fn\n\t\t},\n\n\t\tonupdate(fn) {\n\t\t\toptions.onupdate = fn\n\t\t},\n\n\t\ton(eventName, selectorOrCallback, callback) {\n\t\t\ton(elm, eventName, selectorOrCallback, callback)\n\t\t},\n\n\t\toff(eventName, callback) {\n\t\t\toff(elm, eventName, callback)\n\t\t},\n\n\t\ttrigger(eventName, target, args) {\n\t\t\tif (target.constructor === String) {\n\t\t\t\tArray\n\t\t\t\t\t.from(elm.querySelectorAll(target))\n\t\t\t\t\t.forEach( children => trigger(children, eventName, { args: args }) )\n\t\t\t}\n\t\t\telse trigger(elm, eventName, { args: target })\n\t\t},\n\n\t\temit: ( ...args ) => {\n\t\t\ttrigger(elm, args.shift(), { args: args })\n\t\t},\n\n\t\tstate: {\n\t\t\tset( data ) {\n\t\t\t\tif (data.constructor === Function) {\n\t\t\t\t\tconst newstate = dup(state.data)\n\t\t\t\t\tdata(newstate)\n\t\t\t\t\tbase.render(newstate)\n\t\t\t\t} else {\n\t\t\t\t\tbase.render(data)\n\t\t\t\t}\n\t\t\t\treturn new Promise((resolve) => rAF(_ => rAF(() => resolve(state.data))))\n\t\t\t},\n\t\t\tget() {\n\t\t\t\treturn dup(state.data)\n\t\t\t},\n\n\t\t\tgetRaw(){\n\t\t\t\treturn state.data\n\t\t\t}\n\t\t},\n\n\t\trender(data = state.data) {\n\n\t\t\tif (!document.body.contains(elm)) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tstate.data = Object.assign(state.data, data)\n\n\t\t\tconst newdata = dup(state.data)\n\t\t\tconst newhtml = base.template.call(options.view(newdata), elm, safe, $scopes)\n\n\t\t\tmorphdom(elm, newhtml, morphdomOptions(elm))\n\n\t\t\trAF(_ => {\n\t\t\t\tArray\n\t\t\t\t\t.from(elm.querySelectorAll('[tplid]'))\n\t\t\t\t\t.forEach((child: any) => {\n\t\t\t\t\t\tconst data = Object.assign( child.base.state.getRaw(), newdata)\n\t\t\t\t\t\tchild.options.onupdate(data)\n\t\t\t\t\t\tchild.base.render(data)\n\t\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\treturn { base, options }\n}\n\nconst getOptions = (module) => ({\n\tmain: (a) => a,\n\tunmount: (a) => a,\n\tonupdate: (a) => a,\n\tview: module.view ? module.view : (a) => a\n})\n\nconst morphdomOptions = (_parent ) => ({\n\tonNodeAdded: onUpdates,\n\tonElUpdated: onUpdates,\n\tonBeforeElChildrenUpdated: checkStatic,\n\tonBeforeElUpdated: checkStatic\n})\n\nconst checkStatic = (node) => {\n\tif ('html-static' in node.attributes) {\n\t\treturn false\n\t}\n}\n\nconst onUpdates = (node) => {\n\tif (node.nodeType === 1) {\n\t\tif ( node.getAttribute('tplid') ) {\n\t\t\treturn false\n\t\t}\n\t}\n\treturn node\n}\n","import Component from './component'\nimport { purge, rAF } from './utils'\n\nexport default function Element(module, dependencies, templates, components, $scopes) {\n\n\treturn class extends HTMLElement {\n\n\t\tbase: any\n\t\toptions: any\n\t\treturns : any\n\t\t__events: any\n\n\t\tconstructor() {\n\n\t\t\tsuper()\n\t\t\tconst { base, options } = Component(this, { module, dependencies, templates, components, $scopes })\n\n\t\t\tthis.base = base\n\t\t\tthis.options = options\n\t\t\tthis.returns = module.default(base)\n\t\t}\n\n\t\tconnectedCallback() {\n\n\t\t\tthis.base.render()\n\n\t\t\tif( this.returns && this.returns.constructor === Promise ) {\n\t\t\t\tthis.returns.then( _ => {\n\t\t\t\t\tif( this.base  ) {\n\t\t\t\t\t\tthis.options.main()?.forEach(f => f(this.base))\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}else {\n\t\t\t\tthis.options.main()?.forEach(f => f(this.base))\n\t\t\t}\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.options.unmount(this.base)\n\t\t\trAF(() => {\n\t\t\t\tif(!document.body.contains(this) ) {\n\t\t\t\t\tthis.__events? this.__events = null : null\n\t\t\t\t\tthis.base? this.base.elm = null : null\n\t\t\t\t\tthis.base? this.base = null : null\n\t\t\t\t\tpurge(this)\n\t\t\t\t}\n\t\t\t})\n\n\t\t}\n\n\t\tattributeChangedCallback() {\n\t\t\t//TODO\n\t\t}\n\t}\n}\n","import { type Module } from '..'\nimport { templateConfig, buildtemplates } from './template-system'\nimport { publish, subscribe } from './utils/pubsub'\nimport Element from './element'\n\nconst templates = {}\nconst components = {}\nconst $scopes = {}\n\nexport default {\n\n\ttemplateConfig,\n\n\tpublish,\n\tsubscribe,\n\n\tregister( name:string, module: Module, dependencies: object ) {\n\t\tcomponents[name] = { name, module, dependencies }\n\t},\n\n\tstart( target = document.body ) {\n\t\tbuildtemplates( target, components, templates, $scopes )\n\t\tregisterComponents()\n\t}\n}\n\nconst registerComponents = () => {\n\tObject\n\t\t.values( components )\n\t\t.forEach( (component) => {\n\t\t\tconst { name, module, dependencies } = component as any\n\t\t\tconst Base = Element(module, dependencies, templates, components, $scopes)\n\t\t\tcustomElements.define(name, Base)\n\t\t})\n}\n"],"names":["parser","DOMParser","wrap","open","node","close","_a","parentNode","insertBefore","_b","nextSibling","rAF","fn","requestAnimationFrame","setTimeout","dup","o","JSON","parse","stringify","purge","d","i","l","n","a","attributes","length","name","childNodes","safe","execute","val","err","textarea","document","createElement","config","tags","Template","element","$scopes","html","regexTags","RegExp","virtual","parseFromString","replace","querySelectorAll","forEach","htmlForeach","getAttribute","htmlFor","htmlIf","htmlInner","htmlClass","forEachInstruction","selector","split","match","varname","object","removeAttribute","ids","Array","from","map","cp","tplid","createTextNode","innerHTML","className","trim","body","all","key","value","Transpile","outerHTML","decodedHTML","Function","buildtemplates","target","components","templates","filter","tagName","toLowerCase","reverse","template","content","createTemplateId","id","c","r","Math","random","toString","setAttribute","topics","_async","publish","params","Object","assign","topic","subscribe","method","push","range","NS_XHTML","doc","HAS_TEMPLATE_SUPPORT","HAS_RANGE_SUPPORT","createRange","toElement","str","createFragmentFromTemplate","selectNode","createContextualFragment","createFragmentFromRange","fragment","createFragmentFromWrap","compareNodeNames","fromEl","toEl","fromCodeStart","toCodeStart","fromNodeName","nodeName","toNodeName","charCodeAt","toUpperCase","syncBooleanAttrProp","specialElHandlers","OPTION","parentName","hasAttribute","selected","selectedIndex","INPUT","TEXTAREA","newValue","firstChild","oldValue","nodeValue","placeholder","SELECT","optgroup","curChild","noop","defaultGetNodeKey","morphAttrs","morphdom","fromNode","toNode","attr","attrName","attrNamespaceURI","attrValue","toNodeAttrs","nodeType","namespaceURI","localName","getAttributeNS","prefix","setAttributeNS","fromNodeAttrs","hasAttributeNS","removeAttributeNS","options","toNodeHtml","firstElementChild","getNodeKey","onBeforeNodeAdded","onNodeAdded","onBeforeElUpdated","onElUpdated","onBeforeNodeDiscarded","onNodeDiscarded","onBeforeElChildrenUpdated","skipFromChildren","addChild","parent","child","appendChild","childrenOnly","fromNodesLookup","create","keyedRemovalList","addKeyedRemoval","walkDiscardedChildNodes","skipKeyedNodes","removeNode","removeChild","handleNodeAdded","el","unmatchedFromEl","replaceChild","morphEl","toElKey","curToNodeKey","curFromNodeKey","fromNextSibling","toNextSibling","matchingFromEl","skipFrom","curToNodeChild","curFromNodeChild","outer","isSameNode","curFromNodeType","isCompatible","onBeforeNodeAddedResult","actualize","ownerDocument","cleanupFromEl","specialElHandler","morphChildren","indexTree","morphedNode","morphedNodeType","toNodeType","nextChild","moveChildren","createElementNS","len","elToRemove","customEvent","window","CustomEvent","data","newEvent","createEvent","initCustomEvent","handler","ev","e","scope","this","detail","__events","apply","concat","args","removeListener","listener","removeEventListener","delegate","callback","matches","delegateTarget","on","selectorOrCallback","addEventListener","call","off","old","trigger","dispatchEvent","bubbles","getOptions","module","main","unmount","onupdate","view","morphdomOptions","_parent","onUpdates","checkStatic","Element","dependencies","HTMLElement","constructor","base","elm","initialState","state","model","shift","eventName","String","children","emit","set","newstate","render","Promise","resolve","_","get","getRaw","contains","newdata","newhtml","Component","returns","default","connectedCallback","then","f","disconnectedCallback","attributeChangedCallback","index","templateConfig","newconfig","register","start","registerComponents","values","component","Base","customElements","define"],"mappings":"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","x_google_ignoreList":[4]}