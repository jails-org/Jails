{"version":3,"file":"index.js","mappings":"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","sources":["webpack://jails/webpack/universalModuleDefinition","webpack://jails/webpack/bootstrap","webpack://jails/webpack/runtime/define property getters","webpack://jails/webpack/runtime/hasOwnProperty shorthand","webpack://jails/webpack/runtime/make namespace object","webpack://jails/./src/Transpile.ts","webpack://jails/./src/utils/index.ts","webpack://jails/./src/template-system.ts","webpack://jails/./node_modules/morphdom/dist/morphdom-esm.js","webpack://jails/./src/utils/events.ts","webpack://jails/./src/utils/pubsub.ts","webpack://jails/./src/component.ts","webpack://jails/./src/element.ts","webpack://jails/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"jails\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"jails\"] = factory();\n\telse\n\t\troot[\"jails\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const parser = new DOMParser();\nexport default function Transpile(html, config, $scopes) {\n    const regexTags = new RegExp(`\\\\${config.tags[0]}(.+?)\\\\${config.tags[1]}`, 'g');\n    const virtual = parser.parseFromString(html.replace(/<\\/?template[^>]*>/g, ''), 'text/html');\n    virtual.querySelectorAll('[html-for], [html-if], [html-inner], [html-class]').forEach((element) => {\n        const htmlForeach = element.getAttribute('html-foreach');\n        const htmlFor = element.getAttribute('html-for');\n        const htmlIf = element.getAttribute('html-if');\n        const htmlInner = element.getAttribute('html-inner');\n        const htmlClass = element.getAttribute('html-class');\n        const forEachInstruction = htmlFor || htmlForeach;\n        if (forEachInstruction) {\n            const selector = htmlFor ? 'html-for' : 'html-foreach';\n            const split = forEachInstruction.match(/(.*)\\sin\\s(.*)/) || '';\n            const varname = split[1];\n            const object = split[2];\n            element.removeAttribute(selector);\n            const ids = Array.from(element.querySelectorAll(`[tplid]:not([${selector}] [tplid])`)).map((cp) => {\n                const tplid = cp.getAttribute('tplid');\n                $scopes[tplid] = [];\n                return tplid;\n            });\n            const open = document.createTextNode(`%%_(function(){ var $index = 0; for(var $key in safe(function(){ return ${object} }) ){ var ${varname} = ${object}[$key]; ${JSON.stringify(ids).replace(/\\\"/g, \"'\")}.map(function(id){ if($scopes[id]) { $scopes[id][$index] = { ${varname}: ${object}[$key], $index: $index, $key: $key } } }); _%%`);\n            const close = document.createTextNode(`%%_ $index++}})() _%%`);\n            wrap(open, element, close);\n        }\n        if (htmlIf) {\n            element.removeAttribute('html-if');\n            const open = document.createTextNode(`%%_ if ( safe(function(){ return ${htmlIf} }) ){ _%%`);\n            const close = document.createTextNode(`%%_ } _%%`);\n            wrap(open, element, close);\n        }\n        if (htmlInner) {\n            element.removeAttribute('html-inner');\n            element.innerHTML = `%%_=${htmlInner}_%%`;\n        }\n        if (htmlClass) {\n            element.removeAttribute('html-class');\n            element.className = (element.className + ` %%_=${htmlClass}_%%`).trim();\n        }\n    });\n    return (virtual.body.innerHTML\n        .replace(regexTags, '%%_=$1_%%')\n        // Booleans\n        // https://meiert.com/en/blog/boolean-attributes-of-html/\n        .replace(/html-(allowfullscreen|async|autofocus|autoplay|checked|controls|default|defer|disabled|formnovalidate|inert|ismap|itemscope|loop|multiple|muted|nomodule|novalidate|open|playsinline|readonly|required|reversed|selected)=\\\"(.*?)\\\"/g, `%%_if(safe(function(){ return $2 })){_%%$1%%_}_%%`)\n        // The rest\n        .replace(/html-(.*?)=\\\"(.*?)\\\"/g, (all, key, value) => {\n        if (key === 'key' || key === 'model' || key == 'scope') {\n            return all;\n        }\n        if (value) {\n            value = value.replace(/^{|}$/g, '');\n            return `${key}=\"%%_=safe(function(){ return ${value} })_%%\"`;\n        }\n        else {\n            return all;\n        }\n    }));\n}\nconst wrap = (open, node, close) => {\n    var _a, _b;\n    (_a = node.parentNode) === null || _a === void 0 ? void 0 : _a.insertBefore(open, node);\n    (_b = node.parentNode) === null || _b === void 0 ? void 0 : _b.insertBefore(close, node.nextSibling);\n};\n","export const rAF = (fn) => {\n    if (requestAnimationFrame)\n        return requestAnimationFrame(fn);\n    else\n        return setTimeout(fn, 1000 / 60);\n};\nexport const uuid = () => {\n    return 'xxxxxxxx'.replace(/[xy]/g, (c) => {\n        const r = Math.random() * 8 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n        return v.toString(8);\n    });\n};\nexport const dup = (o) => {\n    return JSON.parse(JSON.stringify(o));\n};\n// http://crockford.com/javascript/memory/leak.html\nexport const purge = (d) => {\n    var a = d.attributes, i, l, n;\n    if (a) {\n        for (i = a.length - 1; i >= 0; i -= 1) {\n            n = a[i].name;\n            if (typeof d[n] === 'function') {\n                d[n] = null;\n            }\n        }\n    }\n    a = d.childNodes;\n    if (a) {\n        l = a.length;\n        for (i = 0; i < l; i += 1) {\n            purge(d.childNodes[i]);\n        }\n    }\n};\nexport const safe = (execute, val) => {\n    try {\n        return execute();\n    }\n    catch (err) {\n        return val || '';\n    }\n};\n","import Transpile from './Transpile';\nimport { uuid } from './utils';\nconst textarea = document.createElement('textarea');\nconst config = {\n    tags: ['${', '}']\n};\nexport const templateConfig = (newconfig) => {\n    Object.assign(config, newconfig);\n};\nexport default function Template(element, $scopes) {\n    const html = Transpile(element.outerHTML, config, $scopes);\n    textarea.innerHTML = html;\n    const decodedHTML = JSON.stringify(textarea.value);\n    return new Function('$element', 'safe', '$scopes', `\n\t\tvar $data = this;\n\t\twith( $data ){\n\t\t\tvar output=${decodedHTML\n        .replace(/%%_=(.+?)_%%/g, '\"+safe(function(){return $1;})+\"')\n        .replace(/%%_(.+?)_%%/g, '\";$1\\noutput+=\"')};return output;\n\t\t}\n\t`);\n}\nexport const buildtemplates = (target, components, templates, $scopes) => {\n    return Array\n        .from(target.querySelectorAll('*'))\n        .filter((node) => node.tagName.toLowerCase() in components)\n        .reverse()\n        .map((node) => {\n        Array.from(node.querySelectorAll('template'))\n            .map((template) => buildtemplates(template.content, components, templates, $scopes));\n        createTemplateId(node, templates, $scopes);\n        return node;\n    });\n};\nconst createTemplateId = (element, templates, $scopes) => {\n    const tplid = element.getAttribute('tplid');\n    if (!tplid) {\n        const id = uuid();\n        element.setAttribute('tplid', id);\n        templates[id] = Template(element, $scopes);\n    }\n};\n","var DOCUMENT_FRAGMENT_NODE = 11;\n\nfunction morphAttrs(fromNode, toNode) {\n    var toNodeAttrs = toNode.attributes;\n    var attr;\n    var attrName;\n    var attrNamespaceURI;\n    var attrValue;\n    var fromValue;\n\n    // document-fragments dont have attributes so lets not do anything\n    if (toNode.nodeType === DOCUMENT_FRAGMENT_NODE || fromNode.nodeType === DOCUMENT_FRAGMENT_NODE) {\n      return;\n    }\n\n    // update attributes on original DOM element\n    for (var i = toNodeAttrs.length - 1; i >= 0; i--) {\n        attr = toNodeAttrs[i];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n        attrValue = attr.value;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n            fromValue = fromNode.getAttributeNS(attrNamespaceURI, attrName);\n\n            if (fromValue !== attrValue) {\n                if (attr.prefix === 'xmlns'){\n                    attrName = attr.name; // It's not allowed to set an attribute with the XMLNS namespace without specifying the `xmlns` prefix\n                }\n                fromNode.setAttributeNS(attrNamespaceURI, attrName, attrValue);\n            }\n        } else {\n            fromValue = fromNode.getAttribute(attrName);\n\n            if (fromValue !== attrValue) {\n                fromNode.setAttribute(attrName, attrValue);\n            }\n        }\n    }\n\n    // Remove any extra attributes found on the original DOM element that\n    // weren't found on the target element.\n    var fromNodeAttrs = fromNode.attributes;\n\n    for (var d = fromNodeAttrs.length - 1; d >= 0; d--) {\n        attr = fromNodeAttrs[d];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n\n            if (!toNode.hasAttributeNS(attrNamespaceURI, attrName)) {\n                fromNode.removeAttributeNS(attrNamespaceURI, attrName);\n            }\n        } else {\n            if (!toNode.hasAttribute(attrName)) {\n                fromNode.removeAttribute(attrName);\n            }\n        }\n    }\n}\n\nvar range; // Create a range object for efficently rendering strings to elements.\nvar NS_XHTML = 'http://www.w3.org/1999/xhtml';\n\nvar doc = typeof document === 'undefined' ? undefined : document;\nvar HAS_TEMPLATE_SUPPORT = !!doc && 'content' in doc.createElement('template');\nvar HAS_RANGE_SUPPORT = !!doc && doc.createRange && 'createContextualFragment' in doc.createRange();\n\nfunction createFragmentFromTemplate(str) {\n    var template = doc.createElement('template');\n    template.innerHTML = str;\n    return template.content.childNodes[0];\n}\n\nfunction createFragmentFromRange(str) {\n    if (!range) {\n        range = doc.createRange();\n        range.selectNode(doc.body);\n    }\n\n    var fragment = range.createContextualFragment(str);\n    return fragment.childNodes[0];\n}\n\nfunction createFragmentFromWrap(str) {\n    var fragment = doc.createElement('body');\n    fragment.innerHTML = str;\n    return fragment.childNodes[0];\n}\n\n/**\n * This is about the same\n * var html = new DOMParser().parseFromString(str, 'text/html');\n * return html.body.firstChild;\n *\n * @method toElement\n * @param {String} str\n */\nfunction toElement(str) {\n    str = str.trim();\n    if (HAS_TEMPLATE_SUPPORT) {\n      // avoid restrictions on content for things like `<tr><th>Hi</th></tr>` which\n      // createContextualFragment doesn't support\n      // <template> support not available in IE\n      return createFragmentFromTemplate(str);\n    } else if (HAS_RANGE_SUPPORT) {\n      return createFragmentFromRange(str);\n    }\n\n    return createFragmentFromWrap(str);\n}\n\n/**\n * Returns true if two node's names are the same.\n *\n * NOTE: We don't bother checking `namespaceURI` because you will never find two HTML elements with the same\n *       nodeName and different namespace URIs.\n *\n * @param {Element} a\n * @param {Element} b The target element\n * @return {boolean}\n */\nfunction compareNodeNames(fromEl, toEl) {\n    var fromNodeName = fromEl.nodeName;\n    var toNodeName = toEl.nodeName;\n    var fromCodeStart, toCodeStart;\n\n    if (fromNodeName === toNodeName) {\n        return true;\n    }\n\n    fromCodeStart = fromNodeName.charCodeAt(0);\n    toCodeStart = toNodeName.charCodeAt(0);\n\n    // If the target element is a virtual DOM node or SVG node then we may\n    // need to normalize the tag name before comparing. Normal HTML elements that are\n    // in the \"http://www.w3.org/1999/xhtml\"\n    // are converted to upper case\n    if (fromCodeStart <= 90 && toCodeStart >= 97) { // from is upper and to is lower\n        return fromNodeName === toNodeName.toUpperCase();\n    } else if (toCodeStart <= 90 && fromCodeStart >= 97) { // to is upper and from is lower\n        return toNodeName === fromNodeName.toUpperCase();\n    } else {\n        return false;\n    }\n}\n\n/**\n * Create an element, optionally with a known namespace URI.\n *\n * @param {string} name the element name, e.g. 'div' or 'svg'\n * @param {string} [namespaceURI] the element's namespace URI, i.e. the value of\n * its `xmlns` attribute or its inferred namespace.\n *\n * @return {Element}\n */\nfunction createElementNS(name, namespaceURI) {\n    return !namespaceURI || namespaceURI === NS_XHTML ?\n        doc.createElement(name) :\n        doc.createElementNS(namespaceURI, name);\n}\n\n/**\n * Copies the children of one DOM element to another DOM element\n */\nfunction moveChildren(fromEl, toEl) {\n    var curChild = fromEl.firstChild;\n    while (curChild) {\n        var nextChild = curChild.nextSibling;\n        toEl.appendChild(curChild);\n        curChild = nextChild;\n    }\n    return toEl;\n}\n\nfunction syncBooleanAttrProp(fromEl, toEl, name) {\n    if (fromEl[name] !== toEl[name]) {\n        fromEl[name] = toEl[name];\n        if (fromEl[name]) {\n            fromEl.setAttribute(name, '');\n        } else {\n            fromEl.removeAttribute(name);\n        }\n    }\n}\n\nvar specialElHandlers = {\n    OPTION: function(fromEl, toEl) {\n        var parentNode = fromEl.parentNode;\n        if (parentNode) {\n            var parentName = parentNode.nodeName.toUpperCase();\n            if (parentName === 'OPTGROUP') {\n                parentNode = parentNode.parentNode;\n                parentName = parentNode && parentNode.nodeName.toUpperCase();\n            }\n            if (parentName === 'SELECT' && !parentNode.hasAttribute('multiple')) {\n                if (fromEl.hasAttribute('selected') && !toEl.selected) {\n                    // Workaround for MS Edge bug where the 'selected' attribute can only be\n                    // removed if set to a non-empty value:\n                    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12087679/\n                    fromEl.setAttribute('selected', 'selected');\n                    fromEl.removeAttribute('selected');\n                }\n                // We have to reset select element's selectedIndex to -1, otherwise setting\n                // fromEl.selected using the syncBooleanAttrProp below has no effect.\n                // The correct selectedIndex will be set in the SELECT special handler below.\n                parentNode.selectedIndex = -1;\n            }\n        }\n        syncBooleanAttrProp(fromEl, toEl, 'selected');\n    },\n    /**\n     * The \"value\" attribute is special for the <input> element since it sets\n     * the initial value. Changing the \"value\" attribute without changing the\n     * \"value\" property will have no effect since it is only used to the set the\n     * initial value.  Similar for the \"checked\" attribute, and \"disabled\".\n     */\n    INPUT: function(fromEl, toEl) {\n        syncBooleanAttrProp(fromEl, toEl, 'checked');\n        syncBooleanAttrProp(fromEl, toEl, 'disabled');\n\n        if (fromEl.value !== toEl.value) {\n            fromEl.value = toEl.value;\n        }\n\n        if (!toEl.hasAttribute('value')) {\n            fromEl.removeAttribute('value');\n        }\n    },\n\n    TEXTAREA: function(fromEl, toEl) {\n        var newValue = toEl.value;\n        if (fromEl.value !== newValue) {\n            fromEl.value = newValue;\n        }\n\n        var firstChild = fromEl.firstChild;\n        if (firstChild) {\n            // Needed for IE. Apparently IE sets the placeholder as the\n            // node value and vise versa. This ignores an empty update.\n            var oldValue = firstChild.nodeValue;\n\n            if (oldValue == newValue || (!newValue && oldValue == fromEl.placeholder)) {\n                return;\n            }\n\n            firstChild.nodeValue = newValue;\n        }\n    },\n    SELECT: function(fromEl, toEl) {\n        if (!toEl.hasAttribute('multiple')) {\n            var selectedIndex = -1;\n            var i = 0;\n            // We have to loop through children of fromEl, not toEl since nodes can be moved\n            // from toEl to fromEl directly when morphing.\n            // At the time this special handler is invoked, all children have already been morphed\n            // and appended to / removed from fromEl, so using fromEl here is safe and correct.\n            var curChild = fromEl.firstChild;\n            var optgroup;\n            var nodeName;\n            while(curChild) {\n                nodeName = curChild.nodeName && curChild.nodeName.toUpperCase();\n                if (nodeName === 'OPTGROUP') {\n                    optgroup = curChild;\n                    curChild = optgroup.firstChild;\n                } else {\n                    if (nodeName === 'OPTION') {\n                        if (curChild.hasAttribute('selected')) {\n                            selectedIndex = i;\n                            break;\n                        }\n                        i++;\n                    }\n                    curChild = curChild.nextSibling;\n                    if (!curChild && optgroup) {\n                        curChild = optgroup.nextSibling;\n                        optgroup = null;\n                    }\n                }\n            }\n\n            fromEl.selectedIndex = selectedIndex;\n        }\n    }\n};\n\nvar ELEMENT_NODE = 1;\nvar DOCUMENT_FRAGMENT_NODE$1 = 11;\nvar TEXT_NODE = 3;\nvar COMMENT_NODE = 8;\n\nfunction noop() {}\n\nfunction defaultGetNodeKey(node) {\n  if (node) {\n    return (node.getAttribute && node.getAttribute('id')) || node.id;\n  }\n}\n\nfunction morphdomFactory(morphAttrs) {\n\n  return function morphdom(fromNode, toNode, options) {\n    if (!options) {\n      options = {};\n    }\n\n    if (typeof toNode === 'string') {\n      if (fromNode.nodeName === '#document' || fromNode.nodeName === 'HTML' || fromNode.nodeName === 'BODY') {\n        var toNodeHtml = toNode;\n        toNode = doc.createElement('html');\n        toNode.innerHTML = toNodeHtml;\n      } else {\n        toNode = toElement(toNode);\n      }\n    } else if (toNode.nodeType === DOCUMENT_FRAGMENT_NODE$1) {\n      toNode = toNode.firstElementChild;\n    }\n\n    var getNodeKey = options.getNodeKey || defaultGetNodeKey;\n    var onBeforeNodeAdded = options.onBeforeNodeAdded || noop;\n    var onNodeAdded = options.onNodeAdded || noop;\n    var onBeforeElUpdated = options.onBeforeElUpdated || noop;\n    var onElUpdated = options.onElUpdated || noop;\n    var onBeforeNodeDiscarded = options.onBeforeNodeDiscarded || noop;\n    var onNodeDiscarded = options.onNodeDiscarded || noop;\n    var onBeforeElChildrenUpdated = options.onBeforeElChildrenUpdated || noop;\n    var skipFromChildren = options.skipFromChildren || noop;\n    var addChild = options.addChild || function(parent, child){ return parent.appendChild(child); };\n    var childrenOnly = options.childrenOnly === true;\n\n    // This object is used as a lookup to quickly find all keyed elements in the original DOM tree.\n    var fromNodesLookup = Object.create(null);\n    var keyedRemovalList = [];\n\n    function addKeyedRemoval(key) {\n      keyedRemovalList.push(key);\n    }\n\n    function walkDiscardedChildNodes(node, skipKeyedNodes) {\n      if (node.nodeType === ELEMENT_NODE) {\n        var curChild = node.firstChild;\n        while (curChild) {\n\n          var key = undefined;\n\n          if (skipKeyedNodes && (key = getNodeKey(curChild))) {\n            // If we are skipping keyed nodes then we add the key\n            // to a list so that it can be handled at the very end.\n            addKeyedRemoval(key);\n          } else {\n            // Only report the node as discarded if it is not keyed. We do this because\n            // at the end we loop through all keyed elements that were unmatched\n            // and then discard them in one final pass.\n            onNodeDiscarded(curChild);\n            if (curChild.firstChild) {\n              walkDiscardedChildNodes(curChild, skipKeyedNodes);\n            }\n          }\n\n          curChild = curChild.nextSibling;\n        }\n      }\n    }\n\n    /**\n    * Removes a DOM node out of the original DOM\n    *\n    * @param  {Node} node The node to remove\n    * @param  {Node} parentNode The nodes parent\n    * @param  {Boolean} skipKeyedNodes If true then elements with keys will be skipped and not discarded.\n    * @return {undefined}\n    */\n    function removeNode(node, parentNode, skipKeyedNodes) {\n      if (onBeforeNodeDiscarded(node) === false) {\n        return;\n      }\n\n      if (parentNode) {\n        parentNode.removeChild(node);\n      }\n\n      onNodeDiscarded(node);\n      walkDiscardedChildNodes(node, skipKeyedNodes);\n    }\n\n    // // TreeWalker implementation is no faster, but keeping this around in case this changes in the future\n    // function indexTree(root) {\n    //     var treeWalker = document.createTreeWalker(\n    //         root,\n    //         NodeFilter.SHOW_ELEMENT);\n    //\n    //     var el;\n    //     while((el = treeWalker.nextNode())) {\n    //         var key = getNodeKey(el);\n    //         if (key) {\n    //             fromNodesLookup[key] = el;\n    //         }\n    //     }\n    // }\n\n    // // NodeIterator implementation is no faster, but keeping this around in case this changes in the future\n    //\n    // function indexTree(node) {\n    //     var nodeIterator = document.createNodeIterator(node, NodeFilter.SHOW_ELEMENT);\n    //     var el;\n    //     while((el = nodeIterator.nextNode())) {\n    //         var key = getNodeKey(el);\n    //         if (key) {\n    //             fromNodesLookup[key] = el;\n    //         }\n    //     }\n    // }\n\n    function indexTree(node) {\n      if (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE$1) {\n        var curChild = node.firstChild;\n        while (curChild) {\n          var key = getNodeKey(curChild);\n          if (key) {\n            fromNodesLookup[key] = curChild;\n          }\n\n          // Walk recursively\n          indexTree(curChild);\n\n          curChild = curChild.nextSibling;\n        }\n      }\n    }\n\n    indexTree(fromNode);\n\n    function handleNodeAdded(el) {\n      onNodeAdded(el);\n\n      var curChild = el.firstChild;\n      while (curChild) {\n        var nextSibling = curChild.nextSibling;\n\n        var key = getNodeKey(curChild);\n        if (key) {\n          var unmatchedFromEl = fromNodesLookup[key];\n          // if we find a duplicate #id node in cache, replace `el` with cache value\n          // and morph it to the child node.\n          if (unmatchedFromEl && compareNodeNames(curChild, unmatchedFromEl)) {\n            curChild.parentNode.replaceChild(unmatchedFromEl, curChild);\n            morphEl(unmatchedFromEl, curChild);\n          } else {\n            handleNodeAdded(curChild);\n          }\n        } else {\n          // recursively call for curChild and it's children to see if we find something in\n          // fromNodesLookup\n          handleNodeAdded(curChild);\n        }\n\n        curChild = nextSibling;\n      }\n    }\n\n    function cleanupFromEl(fromEl, curFromNodeChild, curFromNodeKey) {\n      // We have processed all of the \"to nodes\". If curFromNodeChild is\n      // non-null then we still have some from nodes left over that need\n      // to be removed\n      while (curFromNodeChild) {\n        var fromNextSibling = curFromNodeChild.nextSibling;\n        if ((curFromNodeKey = getNodeKey(curFromNodeChild))) {\n          // Since the node is keyed it might be matched up later so we defer\n          // the actual removal to later\n          addKeyedRemoval(curFromNodeKey);\n        } else {\n          // NOTE: we skip nested keyed nodes from being removed since there is\n          //       still a chance they will be matched up later\n          removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n        }\n        curFromNodeChild = fromNextSibling;\n      }\n    }\n\n    function morphEl(fromEl, toEl, childrenOnly) {\n      var toElKey = getNodeKey(toEl);\n\n      if (toElKey) {\n        // If an element with an ID is being morphed then it will be in the final\n        // DOM so clear it out of the saved elements collection\n        delete fromNodesLookup[toElKey];\n      }\n\n      if (!childrenOnly) {\n        // optional\n        if (onBeforeElUpdated(fromEl, toEl) === false) {\n          return;\n        }\n\n        // update attributes on original DOM element first\n        morphAttrs(fromEl, toEl);\n        // optional\n        onElUpdated(fromEl);\n\n        if (onBeforeElChildrenUpdated(fromEl, toEl) === false) {\n          return;\n        }\n      }\n\n      if (fromEl.nodeName !== 'TEXTAREA') {\n        morphChildren(fromEl, toEl);\n      } else {\n        specialElHandlers.TEXTAREA(fromEl, toEl);\n      }\n    }\n\n    function morphChildren(fromEl, toEl) {\n      var skipFrom = skipFromChildren(fromEl);\n      var curToNodeChild = toEl.firstChild;\n      var curFromNodeChild = fromEl.firstChild;\n      var curToNodeKey;\n      var curFromNodeKey;\n\n      var fromNextSibling;\n      var toNextSibling;\n      var matchingFromEl;\n\n      // walk the children\n      outer: while (curToNodeChild) {\n        toNextSibling = curToNodeChild.nextSibling;\n        curToNodeKey = getNodeKey(curToNodeChild);\n\n        // walk the fromNode children all the way through\n        while (!skipFrom && curFromNodeChild) {\n          fromNextSibling = curFromNodeChild.nextSibling;\n\n          if (curToNodeChild.isSameNode && curToNodeChild.isSameNode(curFromNodeChild)) {\n            curToNodeChild = toNextSibling;\n            curFromNodeChild = fromNextSibling;\n            continue outer;\n          }\n\n          curFromNodeKey = getNodeKey(curFromNodeChild);\n\n          var curFromNodeType = curFromNodeChild.nodeType;\n\n          // this means if the curFromNodeChild doesnt have a match with the curToNodeChild\n          var isCompatible = undefined;\n\n          if (curFromNodeType === curToNodeChild.nodeType) {\n            if (curFromNodeType === ELEMENT_NODE) {\n              // Both nodes being compared are Element nodes\n\n              if (curToNodeKey) {\n                // The target node has a key so we want to match it up with the correct element\n                // in the original DOM tree\n                if (curToNodeKey !== curFromNodeKey) {\n                  // The current element in the original DOM tree does not have a matching key so\n                  // let's check our lookup to see if there is a matching element in the original\n                  // DOM tree\n                  if ((matchingFromEl = fromNodesLookup[curToNodeKey])) {\n                    if (fromNextSibling === matchingFromEl) {\n                      // Special case for single element removals. To avoid removing the original\n                      // DOM node out of the tree (since that can break CSS transitions, etc.),\n                      // we will instead discard the current node and wait until the next\n                      // iteration to properly match up the keyed target element with its matching\n                      // element in the original tree\n                      isCompatible = false;\n                    } else {\n                      // We found a matching keyed element somewhere in the original DOM tree.\n                      // Let's move the original DOM node into the current position and morph\n                      // it.\n\n                      // NOTE: We use insertBefore instead of replaceChild because we want to go through\n                      // the `removeNode()` function for the node that is being discarded so that\n                      // all lifecycle hooks are correctly invoked\n                      fromEl.insertBefore(matchingFromEl, curFromNodeChild);\n\n                      // fromNextSibling = curFromNodeChild.nextSibling;\n\n                      if (curFromNodeKey) {\n                        // Since the node is keyed it might be matched up later so we defer\n                        // the actual removal to later\n                        addKeyedRemoval(curFromNodeKey);\n                      } else {\n                        // NOTE: we skip nested keyed nodes from being removed since there is\n                        //       still a chance they will be matched up later\n                        removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                      }\n\n                      curFromNodeChild = matchingFromEl;\n                    }\n                  } else {\n                    // The nodes are not compatible since the \"to\" node has a key and there\n                    // is no matching keyed node in the source tree\n                    isCompatible = false;\n                  }\n                }\n              } else if (curFromNodeKey) {\n                // The original has a key\n                isCompatible = false;\n              }\n\n              isCompatible = isCompatible !== false && compareNodeNames(curFromNodeChild, curToNodeChild);\n              if (isCompatible) {\n                // We found compatible DOM elements so transform\n                // the current \"from\" node to match the current\n                // target DOM node.\n                // MORPH\n                morphEl(curFromNodeChild, curToNodeChild);\n              }\n\n            } else if (curFromNodeType === TEXT_NODE || curFromNodeType == COMMENT_NODE) {\n              // Both nodes being compared are Text or Comment nodes\n              isCompatible = true;\n              // Simply update nodeValue on the original node to\n              // change the text value\n              if (curFromNodeChild.nodeValue !== curToNodeChild.nodeValue) {\n                curFromNodeChild.nodeValue = curToNodeChild.nodeValue;\n              }\n\n            }\n          }\n\n          if (isCompatible) {\n            // Advance both the \"to\" child and the \"from\" child since we found a match\n            // Nothing else to do as we already recursively called morphChildren above\n            curToNodeChild = toNextSibling;\n            curFromNodeChild = fromNextSibling;\n            continue outer;\n          }\n\n          // No compatible match so remove the old node from the DOM and continue trying to find a\n          // match in the original DOM. However, we only do this if the from node is not keyed\n          // since it is possible that a keyed node might match up with a node somewhere else in the\n          // target tree and we don't want to discard it just yet since it still might find a\n          // home in the final DOM tree. After everything is done we will remove any keyed nodes\n          // that didn't find a home\n          if (curFromNodeKey) {\n            // Since the node is keyed it might be matched up later so we defer\n            // the actual removal to later\n            addKeyedRemoval(curFromNodeKey);\n          } else {\n            // NOTE: we skip nested keyed nodes from being removed since there is\n            //       still a chance they will be matched up later\n            removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n          }\n\n          curFromNodeChild = fromNextSibling;\n        } // END: while(curFromNodeChild) {}\n\n        // If we got this far then we did not find a candidate match for\n        // our \"to node\" and we exhausted all of the children \"from\"\n        // nodes. Therefore, we will just append the current \"to\" node\n        // to the end\n        if (curToNodeKey && (matchingFromEl = fromNodesLookup[curToNodeKey]) && compareNodeNames(matchingFromEl, curToNodeChild)) {\n          // MORPH\n          if(!skipFrom){ addChild(fromEl, matchingFromEl); }\n          morphEl(matchingFromEl, curToNodeChild);\n        } else {\n          var onBeforeNodeAddedResult = onBeforeNodeAdded(curToNodeChild);\n          if (onBeforeNodeAddedResult !== false) {\n            if (onBeforeNodeAddedResult) {\n              curToNodeChild = onBeforeNodeAddedResult;\n            }\n\n            if (curToNodeChild.actualize) {\n              curToNodeChild = curToNodeChild.actualize(fromEl.ownerDocument || doc);\n            }\n            addChild(fromEl, curToNodeChild);\n            handleNodeAdded(curToNodeChild);\n          }\n        }\n\n        curToNodeChild = toNextSibling;\n        curFromNodeChild = fromNextSibling;\n      }\n\n      cleanupFromEl(fromEl, curFromNodeChild, curFromNodeKey);\n\n      var specialElHandler = specialElHandlers[fromEl.nodeName];\n      if (specialElHandler) {\n        specialElHandler(fromEl, toEl);\n      }\n    } // END: morphChildren(...)\n\n    var morphedNode = fromNode;\n    var morphedNodeType = morphedNode.nodeType;\n    var toNodeType = toNode.nodeType;\n\n    if (!childrenOnly) {\n      // Handle the case where we are given two DOM nodes that are not\n      // compatible (e.g. <div> --> <span> or <div> --> TEXT)\n      if (morphedNodeType === ELEMENT_NODE) {\n        if (toNodeType === ELEMENT_NODE) {\n          if (!compareNodeNames(fromNode, toNode)) {\n            onNodeDiscarded(fromNode);\n            morphedNode = moveChildren(fromNode, createElementNS(toNode.nodeName, toNode.namespaceURI));\n          }\n        } else {\n          // Going from an element node to a text node\n          morphedNode = toNode;\n        }\n      } else if (morphedNodeType === TEXT_NODE || morphedNodeType === COMMENT_NODE) { // Text or comment node\n        if (toNodeType === morphedNodeType) {\n          if (morphedNode.nodeValue !== toNode.nodeValue) {\n            morphedNode.nodeValue = toNode.nodeValue;\n          }\n\n          return morphedNode;\n        } else {\n          // Text node to something else\n          morphedNode = toNode;\n        }\n      }\n    }\n\n    if (morphedNode === toNode) {\n      // The \"to node\" was not compatible with the \"from node\" so we had to\n      // toss out the \"from node\" and use the \"to node\"\n      onNodeDiscarded(fromNode);\n    } else {\n      if (toNode.isSameNode && toNode.isSameNode(morphedNode)) {\n        return;\n      }\n\n      morphEl(morphedNode, toNode, childrenOnly);\n\n      // We now need to loop over any keyed nodes that might need to be\n      // removed. We only do the removal if we know that the keyed node\n      // never found a match. When a keyed node is matched up we remove\n      // it out of fromNodesLookup and we use fromNodesLookup to determine\n      // if a keyed node has been matched up or not\n      if (keyedRemovalList) {\n        for (var i=0, len=keyedRemovalList.length; i<len; i++) {\n          var elToRemove = fromNodesLookup[keyedRemovalList[i]];\n          if (elToRemove) {\n            removeNode(elToRemove, elToRemove.parentNode, false);\n          }\n        }\n      }\n    }\n\n    if (!childrenOnly && morphedNode !== fromNode && fromNode.parentNode) {\n      if (morphedNode.actualize) {\n        morphedNode = morphedNode.actualize(fromNode.ownerDocument || doc);\n      }\n      // If we had to swap out the from node with a new node because the old\n      // node was not compatible with the target node then we need to\n      // replace the old DOM node in the original DOM tree. This is only\n      // possible if the original DOM node was part of a DOM tree which\n      // we know is the case if it has a parent node.\n      fromNode.parentNode.replaceChild(morphedNode, fromNode);\n    }\n\n    return morphedNode;\n  };\n}\n\nvar morphdom = morphdomFactory(morphAttrs);\n\nexport default morphdom;\n","const customEvent = (() => {\n    return ('CustomEvent' in window && typeof window.CustomEvent === 'function')\n        ? (name, data) => new CustomEvent(name, data)\n        : (name, data) => {\n            const newEvent = document.createEvent('CustomEvent');\n            newEvent.initCustomEvent(name, true, true, data);\n            return newEvent;\n        };\n})();\nconst handler = (node, ev) => {\n    return function (e) {\n        const scope = this;\n        const detail = e.detail || {};\n        node.__events[ev].forEach(o => {\n            o.handler.apply(scope, [e].concat(detail.args));\n        });\n    };\n};\nconst removeListener = (node, ev) => {\n    if (node.__events[ev] && node.__events[ev].listener) {\n        node.removeEventListener(ev, node.__events[ev].listener, (ev == 'focus' || ev == 'blur' || ev == 'mouseenter' || ev == 'mouseleave'));\n        delete node.__events[ev];\n    }\n};\nconst delegate = (node, selector, callback) => {\n    return function (e) {\n        const element = this;\n        const detail = e.detail || {};\n        let parent = e.target;\n        while (parent) {\n            if (parent.matches(selector)) {\n                e.delegateTarget = parent;\n                callback.apply(element, [e].concat(detail.args));\n            }\n            if (parent === node)\n                break;\n            parent = parent.parentNode;\n        }\n    };\n};\nexport const on = (node, ev, selectorOrCallback, callback) => {\n    node.__events = node.__events || {};\n    node.__events[ev] = (node.__events[ev] || []);\n    if (!node.__events[ev].length) {\n        const fn = handler(node, ev);\n        node.addEventListener(ev, fn, (ev == 'focus' || ev == 'blur' || ev == 'mouseenter' || ev == 'mouseleave'));\n        node.__events[ev].listener = fn;\n    }\n    if (selectorOrCallback.call) {\n        node.__events[ev].push({ handler: selectorOrCallback, callback: selectorOrCallback });\n    }\n    else {\n        node.__events[ev].push({ handler: delegate(node, selectorOrCallback, callback), callback });\n    }\n};\nexport const off = (node, ev, fn) => {\n    if (fn && node.__events[ev] && node.__events[ev].length) {\n        var old = node.__events[ev];\n        node.__events[ev] = node.__events[ev].filter(function (o) { return o.callback != fn; });\n        node.__events[ev].listener = old.listener;\n        if (!node.__events[ev].length)\n            removeListener(node, ev);\n    }\n    else {\n        removeListener(node, ev);\n    }\n};\nexport const trigger = (node, name, args) => {\n    node.dispatchEvent(customEvent(name, { bubbles: true, detail: args }));\n};\n","const topics = {};\nconst _async = {};\nexport const publish = (name, params) => {\n    _async[name] = Object.assign({}, _async[name], params);\n    if (topics[name])\n        topics[name].forEach(topic => topic(params));\n};\nexport const subscribe = (name, method) => {\n    topics[name] = topics[name] || [];\n    topics[name].push(method);\n    if (name in _async) {\n        method(_async[name]);\n    }\n    return () => {\n        topics[name] = topics[name].filter(fn => fn != method);\n    };\n};\n","import morphdom from 'morphdom';\nimport { rAF, dup, safe } from './utils';\nimport { buildtemplates } from './template-system';\nimport { on, off, trigger } from './utils/events';\nimport { publish, subscribe } from './utils/pubsub';\nexport default function Component(elm, { module, dependencies, templates, components, $scopes }) {\n    const options = getOptions(module);\n    buildtemplates(elm, components, templates, $scopes);\n    const htmlModel = elm.getAttribute('html-model');\n    const initialState = htmlModel ? (new Function(`return ${htmlModel}`))() : {};\n    const tplid = elm.getAttribute('tplid');\n    const template = tplid ? templates[tplid] : null;\n    const state = { data: module.model ? dup(module.model) : {} };\n    const scope = $scopes[tplid] && $scopes[tplid].length ? $scopes[tplid].shift() : {};\n    state.data = Object.assign(scope, state.data, initialState);\n    const base = {\n        template,\n        elm,\n        dependencies,\n        publish,\n        subscribe,\n        main(fn) {\n            options.main = fn;\n        },\n        unmount(fn) {\n            options.unmount = fn;\n        },\n        onupdate(fn) {\n            options.onupdate = fn;\n        },\n        on(eventName, selectorOrCallback, callback) {\n            on(elm, eventName, selectorOrCallback, callback);\n        },\n        off(eventName, callback) {\n            off(elm, eventName, callback);\n        },\n        trigger(eventName, target, args) {\n            if (target.constructor === String) {\n                Array\n                    .from(elm.querySelectorAll(target))\n                    .forEach(children => trigger(children, eventName, { args: args }));\n            }\n            else\n                trigger(elm, eventName, { args: target });\n        },\n        emit: (...args) => {\n            trigger(elm, args.shift(), { args: args });\n        },\n        state: {\n            set(data) {\n                if (data.constructor === Function) {\n                    const newstate = dup(state.data);\n                    data(newstate);\n                    base.render(newstate);\n                }\n                else {\n                    base.render(data);\n                }\n                return new Promise((resolve) => rAF(_ => rAF(() => resolve(state.data))));\n            },\n            get() {\n                return dup(state.data);\n            },\n            getRaw() {\n                return state.data;\n            }\n        },\n        render(data = state.data) {\n            if (!document.body.contains(elm)) {\n                return;\n            }\n            state.data = Object.assign(state.data, data);\n            const newdata = dup(state.data);\n            const newhtml = base.template.call(options.view(newdata), elm, safe, $scopes);\n            morphdom(elm, newhtml, morphdomOptions(elm, options));\n            rAF(_ => {\n                Array\n                    .from(elm.querySelectorAll('[tplid]'))\n                    .forEach((child) => {\n                    const data = Object.assign(child.base.state.getRaw(), newdata);\n                    child.options.onupdate(data);\n                    child.base.render(data);\n                });\n            });\n        }\n    };\n    return { base, options };\n}\nconst getOptions = (module) => ({\n    main: (a) => a,\n    unmount: (a) => a,\n    onupdate: (a) => a,\n    view: module.view ? module.view : (a) => a\n});\nconst morphdomOptions = (_parent) => ({\n    onNodeAdded: onUpdates,\n    onElUpdated: onUpdates,\n    onBeforeElChildrenUpdated: checkStatic,\n    onBeforeElUpdated: checkStatic\n});\nconst checkStatic = (node) => {\n    if ('html-static' in node.attributes) {\n        return false;\n    }\n};\nconst onUpdates = (node) => {\n    if (node.nodeType === 1) {\n        if (node.getAttribute('tplid')) {\n            return false;\n        }\n    }\n    return node;\n};\n","import Component from './component';\nimport { purge, rAF } from './utils';\nexport default function Element(module, dependencies, templates, components, $scopes) {\n    return class extends HTMLElement {\n        constructor() {\n            super();\n            const { base, options } = Component(this, { module, dependencies, templates, components, $scopes });\n            this.base = base;\n            this.options = options;\n            this.returns = module.default(base);\n        }\n        connectedCallback() {\n            var _a;\n            this.base.render();\n            if (this.returns && this.returns.constructor === Promise) {\n                this.returns.then(_ => {\n                    var _a;\n                    if (this.base) {\n                        (_a = this.options.main()) === null || _a === void 0 ? void 0 : _a.forEach(f => f(this.base));\n                    }\n                });\n            }\n            else {\n                (_a = this.options.main()) === null || _a === void 0 ? void 0 : _a.forEach(f => f(this.base));\n            }\n        }\n        disconnectedCallback() {\n            this.options.unmount(this.base);\n            rAF(() => {\n                if (!document.body.contains(this)) {\n                    this.__events ? this.__events = null : null;\n                    this.base ? this.base.elm = null : null;\n                    this.base ? this.base = null : null;\n                    purge(this);\n                }\n            });\n        }\n        attributeChangedCallback() {\n            //TODO\n        }\n    };\n}\n","import { templateConfig, buildtemplates } from './template-system';\nimport Element from './element';\nconst templates = {};\nconst components = {};\nconst $scopes = {};\nexport default {\n    templateConfig,\n    register(name, module, dependencies) {\n        components[name] = { name, module, dependencies };\n    },\n    start() {\n        const body = document.body;\n        buildtemplates(body, components, templates, $scopes);\n        registerComponents();\n    }\n};\nconst registerComponents = () => {\n    Object\n        .values(components)\n        .forEach((component) => {\n        const { name, module, dependencies } = component;\n        const Base = Element(module, dependencies, templates, components, $scopes);\n        customElements.define(name, Base);\n    });\n};\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","parser","DOMParser","wrap","open","node","close","_a","_b","parentNode","insertBefore","nextSibling","rAF","fn","requestAnimationFrame","setTimeout","dup","JSON","parse","stringify","purge","d","i","l","n","a","attributes","length","name","childNodes","safe","execute","val","err","document","createElement","config","tags","buildtemplates","target","components","templates","$scopes","Array","from","querySelectorAll","filter","tagName","toLowerCase","reverse","map","template","content","createTemplateId","element","getAttribute","id","replace","c","r","Math","random","toString","setAttribute","html","regexTags","RegExp","virtual","parseFromString","forEach","htmlForeach","htmlFor","htmlIf","htmlInner","htmlClass","forEachInstruction","selector","split","match","varname","object","removeAttribute","ids","cp","tplid","createTextNode","innerHTML","className","trim","body","all","Transpile","outerHTML","decodedHTML","Function","Template","range","doc","undefined","HAS_TEMPLATE_SUPPORT","HAS_RANGE_SUPPORT","createRange","compareNodeNames","fromEl","toEl","fromCodeStart","toCodeStart","fromNodeName","nodeName","toNodeName","charCodeAt","toUpperCase","syncBooleanAttrProp","specialElHandlers","OPTION","parentName","hasAttribute","selected","selectedIndex","INPUT","TEXTAREA","newValue","firstChild","oldValue","nodeValue","placeholder","SELECT","optgroup","curChild","noop","defaultGetNodeKey","fromNode","toNode","options","toNodeHtml","str","createFragmentFromTemplate","selectNode","createContextualFragment","createFragmentFromRange","fragment","createFragmentFromWrap","nodeType","firstElementChild","getNodeKey","onBeforeNodeAdded","onNodeAdded","onBeforeElUpdated","onElUpdated","onBeforeNodeDiscarded","onNodeDiscarded","onBeforeElChildrenUpdated","skipFromChildren","addChild","parent","child","appendChild","childrenOnly","fromNodesLookup","create","keyedRemovalList","addKeyedRemoval","push","walkDiscardedChildNodes","skipKeyedNodes","removeNode","removeChild","handleNodeAdded","el","unmatchedFromEl","replaceChild","morphEl","toElKey","attr","attrName","attrNamespaceURI","attrValue","toNodeAttrs","namespaceURI","localName","getAttributeNS","prefix","setAttributeNS","fromNodeAttrs","hasAttributeNS","removeAttributeNS","morphAttrs","curToNodeKey","curFromNodeKey","fromNextSibling","toNextSibling","matchingFromEl","skipFrom","curToNodeChild","curFromNodeChild","outer","isSameNode","curFromNodeType","isCompatible","onBeforeNodeAddedResult","actualize","ownerDocument","cleanupFromEl","specialElHandler","morphChildren","indexTree","morphedNode","morphedNodeType","toNodeType","nextChild","moveChildren","createElementNS","len","elToRemove","customEvent","window","CustomEvent","data","newEvent","createEvent","initCustomEvent","handler","ev","e","scope","this","detail","__events","apply","concat","args","removeListener","listener","removeEventListener","delegate","callback","matches","delegateTarget","trigger","dispatchEvent","bubbles","topics","_async","publish","params","assign","topic","subscribe","method","checkStatic","onUpdates","Element","dependencies","HTMLElement","constructor","super","base","elm","main","unmount","onupdate","view","getOptions","htmlModel","initialState","state","model","shift","on","eventName","selectorOrCallback","addEventListener","off","old","String","children","emit","set","newstate","render","Promise","resolve","_","getRaw","contains","newdata","newhtml","Component","returns","default","connectedCallback","then","f","disconnectedCallback","attributeChangedCallback","templateConfig","newconfig","register","start","registerComponents","values","component","Base","customElements"],"sourceRoot":""}